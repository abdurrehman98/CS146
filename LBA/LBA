{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "LBA (1).ipynb",
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.0"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q2o1s3irkQcf"
      },
      "source": [
        "# Importing the Libraries and the Dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4-kEbLaoTNXB"
      },
      "source": [
        "#import libraries\n",
        "import pystan\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import scipy.stats as sts\n",
        "\n",
        "sns.set()\n",
        "pd.set_option('display.max_columns', 50)\n",
        "\n",
        "\n",
        "# Copied file path from direct directory as it was downloaded from the websource. Did not rename it so it works on Professors laptop\n",
        "data = pd.read_csv('/content/CS146 LBA data gathering (Spring 2021) (Responses) - Form Responses 1.csv',encoding='\"UTF-8\"')"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 446
        },
        "id": "BglJfptMTV0P",
        "outputId": "7839de31-9397-44e3-9ea9-5dfaf864dd68"
      },
      "source": [
        "data.head() #Let's take a look at our dataset"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Timestamp</th>\n",
              "      <th>Email Address</th>\n",
              "      <th>Your name</th>\n",
              "      <th>Country where you (and the grocery store) are</th>\n",
              "      <th>Currency (e.g. EUR, GBP, USD)</th>\n",
              "      <th>Grocery store name and street address (or URL if shopping online)</th>\n",
              "      <th>Price perception of the store brand</th>\n",
              "      <th>Average rental price near the grocery store</th>\n",
              "      <th>Rent per m^2</th>\n",
              "      <th>Product 1 quantity (kg)</th>\n",
              "      <th>Product 1 price</th>\n",
              "      <th>Product 2 quantity (kg)</th>\n",
              "      <th>Product 2 price</th>\n",
              "      <th>Product 3 quantity (kg)</th>\n",
              "      <th>Product 3 price</th>\n",
              "      <th>Product 1 quantity (kg).1</th>\n",
              "      <th>Product 1 price.1</th>\n",
              "      <th>Product 2 quantity (kg).1</th>\n",
              "      <th>Product 2 price.1</th>\n",
              "      <th>Product 3 quantity (kg).1</th>\n",
              "      <th>Product 3 price.1</th>\n",
              "      <th>Product 1 quantity (kg).2</th>\n",
              "      <th>Product 1 price.2</th>\n",
              "      <th>Product 2 quantity (kg).2</th>\n",
              "      <th>Product 2 price.2</th>\n",
              "      <th>...</th>\n",
              "      <th>Product 3 price.5</th>\n",
              "      <th>Product 1 quantity (liters)</th>\n",
              "      <th>Product 1 price.6</th>\n",
              "      <th>Product 2 quantity (liters)</th>\n",
              "      <th>Product 2 price.6</th>\n",
              "      <th>Product 3 quantity (liters)</th>\n",
              "      <th>Product 3 price.6</th>\n",
              "      <th>Product 1 quantity (kg).6</th>\n",
              "      <th>Product 1 price.7</th>\n",
              "      <th>Product 2 quantity (kg).6</th>\n",
              "      <th>Product 2 price.7</th>\n",
              "      <th>Product 3 quantity (kg).6</th>\n",
              "      <th>Product 3 price.7</th>\n",
              "      <th>Product 1 quantity (count)</th>\n",
              "      <th>Product 1 price.8</th>\n",
              "      <th>Product 2 quantity (count)</th>\n",
              "      <th>Product 2 price.8</th>\n",
              "      <th>Product 3 quantity (count)</th>\n",
              "      <th>Product 3 price.8</th>\n",
              "      <th>Product 1 quantity (kg).7</th>\n",
              "      <th>Product 1 price.9</th>\n",
              "      <th>Product 2 quantity (kg).7</th>\n",
              "      <th>Product 2 price.9</th>\n",
              "      <th>Product 3 quantity (kg).7</th>\n",
              "      <th>Product 3 price.9</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>3/11/2021 3:02:13</td>\n",
              "      <td>isabel@minerva.kgi.edu</td>\n",
              "      <td>Isabel Brunkan</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAD</td>\n",
              "      <td>Thrifty's (https://www.thriftyfoods.com)</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>1450</td>\n",
              "      <td>10.43165468</td>\n",
              "      <td>1.360</td>\n",
              "      <td>4.75</td>\n",
              "      <td>1.360</td>\n",
              "      <td>4.99</td>\n",
              "      <td>1.360</td>\n",
              "      <td>4.75</td>\n",
              "      <td>0.190</td>\n",
              "      <td>0.33</td>\n",
              "      <td>0.180</td>\n",
              "      <td>0.47</td>\n",
              "      <td>0.080</td>\n",
              "      <td>0.35</td>\n",
              "      <td>0.230</td>\n",
              "      <td>1.77</td>\n",
              "      <td>0.454</td>\n",
              "      <td>5.99</td>\n",
              "      <td>...</td>\n",
              "      <td>5.29</td>\n",
              "      <td>2.00</td>\n",
              "      <td>6.49</td>\n",
              "      <td>4.000</td>\n",
              "      <td>6.49</td>\n",
              "      <td>1.50</td>\n",
              "      <td>5.29</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>6.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>7.49</td>\n",
              "      <td>18.0</td>\n",
              "      <td>9.05</td>\n",
              "      <td>18.0</td>\n",
              "      <td>8.19</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5.75</td>\n",
              "      <td>0.400</td>\n",
              "      <td>9.25</td>\n",
              "      <td>0.600</td>\n",
              "      <td>16.25</td>\n",
              "      <td>0.780</td>\n",
              "      <td>16.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3/11/2021 3:02:51</td>\n",
              "      <td>isabel@minerva.kgi.edu</td>\n",
              "      <td>Isabel Brunkan</td>\n",
              "      <td>Canada</td>\n",
              "      <td>CAD</td>\n",
              "      <td>Save On Foods - Foul Bay (https://www.saveonfo...</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>1550</td>\n",
              "      <td>11.15107914</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.100</td>\n",
              "      <td>0.77</td>\n",
              "      <td>...</td>\n",
              "      <td>9.99</td>\n",
              "      <td>1.00</td>\n",
              "      <td>4.19</td>\n",
              "      <td>1.000</td>\n",
              "      <td>2.60</td>\n",
              "      <td>4.00</td>\n",
              "      <td>5.29</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.39</td>\n",
              "      <td>0.454</td>\n",
              "      <td>5.69</td>\n",
              "      <td>0.454</td>\n",
              "      <td>7.69</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5.45</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7.49</td>\n",
              "      <td>12.0</td>\n",
              "      <td>7.69</td>\n",
              "      <td>3.000</td>\n",
              "      <td>23.08</td>\n",
              "      <td>0.100</td>\n",
              "      <td>1.21</td>\n",
              "      <td>0.500</td>\n",
              "      <td>12.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3/2/2021 2:34:17</td>\n",
              "      <td>claudiagold@minerva.kgi.edu</td>\n",
              "      <td>Claudia Jin</td>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Target; 225 Bush St Ste 100, San Francisco, CA...</td>\n",
              "      <td>Mid-range</td>\n",
              "      <td>2996</td>\n",
              "      <td>21.55395683</td>\n",
              "      <td>1.361</td>\n",
              "      <td>4.69</td>\n",
              "      <td>1.361</td>\n",
              "      <td>3.59</td>\n",
              "      <td>1.361</td>\n",
              "      <td>2.99</td>\n",
              "      <td>0.910</td>\n",
              "      <td>1.79</td>\n",
              "      <td>0.120</td>\n",
              "      <td>0.25</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.454</td>\n",
              "      <td>3.19</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.29</td>\n",
              "      <td>...</td>\n",
              "      <td>3.29</td>\n",
              "      <td>1.89</td>\n",
              "      <td>2.19</td>\n",
              "      <td>1.890</td>\n",
              "      <td>1.99</td>\n",
              "      <td>1.67</td>\n",
              "      <td>3.99</td>\n",
              "      <td>0.430</td>\n",
              "      <td>2.29</td>\n",
              "      <td>0.450</td>\n",
              "      <td>3.69</td>\n",
              "      <td>0.370</td>\n",
              "      <td>5.29</td>\n",
              "      <td>12.0</td>\n",
              "      <td>1.69</td>\n",
              "      <td>18.0</td>\n",
              "      <td>2.39</td>\n",
              "      <td>12.0</td>\n",
              "      <td>3.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>5.99</td>\n",
              "      <td>1.134</td>\n",
              "      <td>8.59</td>\n",
              "      <td>1.814</td>\n",
              "      <td>8.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3/2/2021 2:32:10</td>\n",
              "      <td>claudiagold@minerva.kgi.edu</td>\n",
              "      <td>Claudia Jin</td>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Wholefoods; 399 4th St San Francisco, CA 94107</td>\n",
              "      <td>Luxury (expensive)</td>\n",
              "      <td>3360</td>\n",
              "      <td>24.17266187</td>\n",
              "      <td>0.454</td>\n",
              "      <td>2.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>2.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>3.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>6.99</td>\n",
              "      <td>3.79</td>\n",
              "      <td>5.79</td>\n",
              "      <td>0.236</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.95</td>\n",
              "      <td>4.99</td>\n",
              "      <td>0.450</td>\n",
              "      <td>4.49</td>\n",
              "      <td>0.450</td>\n",
              "      <td>8.39</td>\n",
              "      <td>0.250</td>\n",
              "      <td>4.99</td>\n",
              "      <td>12.0</td>\n",
              "      <td>8.69</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5.99</td>\n",
              "      <td>12.0</td>\n",
              "      <td>5.79</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>5.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>6.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3/9/2021 23:24:18</td>\n",
              "      <td>koredeakande@minerva.kgi.edu</td>\n",
              "      <td>Korede Akande</td>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Foodsco (foodsco.net)</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>4000</td>\n",
              "      <td>28.77697842</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.19</td>\n",
              "      <td>0.454</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.454</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.454</td>\n",
              "      <td>0.79</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.29</td>\n",
              "      <td>0.454</td>\n",
              "      <td>1.79</td>\n",
              "      <td>...</td>\n",
              "      <td>2.49</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.47</td>\n",
              "      <td>1.390</td>\n",
              "      <td>2.99</td>\n",
              "      <td>3.79</td>\n",
              "      <td>1.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>3.69</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.99</td>\n",
              "      <td>12.0</td>\n",
              "      <td>3.99</td>\n",
              "      <td>12.0</td>\n",
              "      <td>4.49</td>\n",
              "      <td>12.0</td>\n",
              "      <td>2.99</td>\n",
              "      <td>0.454</td>\n",
              "      <td>5.99</td>\n",
              "      <td>1.133</td>\n",
              "      <td>5.49</td>\n",
              "      <td>0.454</td>\n",
              "      <td>4.49</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 69 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "           Timestamp                 Email Address       Your name  \\\n",
              "0  3/11/2021 3:02:13        isabel@minerva.kgi.edu  Isabel Brunkan   \n",
              "1  3/11/2021 3:02:51        isabel@minerva.kgi.edu  Isabel Brunkan   \n",
              "2   3/2/2021 2:34:17   claudiagold@minerva.kgi.edu     Claudia Jin   \n",
              "3   3/2/2021 2:32:10   claudiagold@minerva.kgi.edu     Claudia Jin   \n",
              "4  3/9/2021 23:24:18  koredeakande@minerva.kgi.edu   Korede Akande   \n",
              "\n",
              "  Country where you (and the grocery store) are Currency (e.g. EUR, GBP, USD)  \\\n",
              "0                                        Canada                           CAD   \n",
              "1                                        Canada                           CAD   \n",
              "2                                 United States                           USD   \n",
              "3                                 United States                           USD   \n",
              "4                                 United States                           USD   \n",
              "\n",
              "  Grocery store name and street address (or URL if shopping online)  \\\n",
              "0           Thrifty's (https://www.thriftyfoods.com)                  \n",
              "1  Save On Foods - Foul Bay (https://www.saveonfo...                  \n",
              "2  Target; 225 Bush St Ste 100, San Francisco, CA...                  \n",
              "3     Wholefoods; 399 4th St San Francisco, CA 94107                  \n",
              "4                              Foodsco (foodsco.net)                  \n",
              "\n",
              "  Price perception of the store brand  \\\n",
              "0                      Budget (cheap)   \n",
              "1                      Budget (cheap)   \n",
              "2                           Mid-range   \n",
              "3                  Luxury (expensive)   \n",
              "4                      Budget (cheap)   \n",
              "\n",
              "  Average rental price near the grocery store Rent per m^2  \\\n",
              "0                                        1450  10.43165468   \n",
              "1                                        1550  11.15107914   \n",
              "2                                        2996  21.55395683   \n",
              "3                                        3360  24.17266187   \n",
              "4                                        4000  28.77697842   \n",
              "\n",
              "   Product 1 quantity (kg)  Product 1 price  Product 2 quantity (kg)  \\\n",
              "0                    1.360             4.75                    1.360   \n",
              "1                    0.100             0.66                    0.100   \n",
              "2                    1.361             4.69                    1.361   \n",
              "3                    0.454             2.49                    0.454   \n",
              "4                    0.454             1.99                    0.454   \n",
              "\n",
              "   Product 2 price  Product 3 quantity (kg)  Product 3 price  \\\n",
              "0             4.99                    1.360             4.75   \n",
              "1             0.44                    0.100             0.88   \n",
              "2             3.59                    1.361             2.99   \n",
              "3             2.99                    0.454             3.99   \n",
              "4             1.19                    0.454             0.99   \n",
              "\n",
              "   Product 1 quantity (kg).1  Product 1 price.1  Product 2 quantity (kg).1  \\\n",
              "0                      0.190               0.33                      0.180   \n",
              "1                      0.100               0.17                      0.100   \n",
              "2                      0.910               1.79                      0.120   \n",
              "3                      0.454               0.49                      0.454   \n",
              "4                      0.454               0.59                      0.454   \n",
              "\n",
              "   Product 2 price.1  Product 3 quantity (kg).1  Product 3 price.1  \\\n",
              "0               0.47                      0.080               0.35   \n",
              "1               0.20                      0.100               0.66   \n",
              "2               0.25                        NaN                NaN   \n",
              "3               1.49                      0.454               1.99   \n",
              "4               0.69                      0.454               0.79   \n",
              "\n",
              "   Product 1 quantity (kg).2  Product 1 price.2  Product 2 quantity (kg).2  \\\n",
              "0                      0.230               1.77                      0.454   \n",
              "1                      0.100               0.66                      0.100   \n",
              "2                      0.454               3.19                      0.454   \n",
              "3                      0.454               1.99                      0.454   \n",
              "4                      0.454               1.29                      0.454   \n",
              "\n",
              "   Product 2 price.2  ...  Product 3 price.5  Product 1 quantity (liters)  \\\n",
              "0               5.99  ...               5.29                         2.00   \n",
              "1               0.77  ...               9.99                         1.00   \n",
              "2               1.29  ...               3.29                         1.89   \n",
              "3               1.79  ...               6.99                         3.79   \n",
              "4               1.79  ...               2.49                         3.79   \n",
              "\n",
              "   Product 1 price.6  Product 2 quantity (liters)  Product 2 price.6  \\\n",
              "0               6.49                        4.000               6.49   \n",
              "1               4.19                        1.000               2.60   \n",
              "2               2.19                        1.890               1.99   \n",
              "3               5.79                        0.236               0.59   \n",
              "4               3.47                        1.390               2.99   \n",
              "\n",
              "   Product 3 quantity (liters)  Product 3 price.6  Product 1 quantity (kg).6  \\\n",
              "0                         1.50               5.29                      0.454   \n",
              "1                         4.00               5.29                      0.454   \n",
              "2                         1.67               3.99                      0.430   \n",
              "3                         0.95               4.99                      0.450   \n",
              "4                         3.79               1.99                      0.454   \n",
              "\n",
              "   Product 1 price.7  Product 2 quantity (kg).6  Product 2 price.7  \\\n",
              "0               4.49                      0.454               6.49   \n",
              "1               4.39                      0.454               5.69   \n",
              "2               2.29                      0.450               3.69   \n",
              "3               4.49                      0.450               8.39   \n",
              "4               3.69                      0.454               4.49   \n",
              "\n",
              "   Product 3 quantity (kg).6  Product 3 price.7  Product 1 quantity (count)  \\\n",
              "0                      0.454               7.49                        18.0   \n",
              "1                      0.454               7.69                        12.0   \n",
              "2                      0.370               5.29                        12.0   \n",
              "3                      0.250               4.99                        12.0   \n",
              "4                      0.454               4.99                        12.0   \n",
              "\n",
              "   Product 1 price.8  Product 2 quantity (count)  Product 2 price.8  \\\n",
              "0               9.05                        18.0               8.19   \n",
              "1               5.45                        12.0               7.49   \n",
              "2               1.69                        18.0               2.39   \n",
              "3               8.69                        12.0               5.99   \n",
              "4               3.99                        12.0               4.49   \n",
              "\n",
              "   Product 3 quantity (count)  Product 3 price.8  Product 1 quantity (kg).7  \\\n",
              "0                        12.0               5.75                      0.400   \n",
              "1                        12.0               7.69                      3.000   \n",
              "2                        12.0               3.99                      0.454   \n",
              "3                        12.0               5.79                      0.454   \n",
              "4                        12.0               2.99                      0.454   \n",
              "\n",
              "   Product 1 price.9  Product 2 quantity (kg).7  Product 2 price.9  \\\n",
              "0               9.25                      0.600              16.25   \n",
              "1              23.08                      0.100               1.21   \n",
              "2               5.99                      1.134               8.59   \n",
              "3               4.99                      0.454               5.99   \n",
              "4               5.99                      1.133               5.49   \n",
              "\n",
              "   Product 3 quantity (kg).7  Product 3 price.9  \n",
              "0                      0.780              16.32  \n",
              "1                      0.500              12.11  \n",
              "2                      1.814               8.49  \n",
              "3                      0.454               6.99  \n",
              "4                      0.454               4.49  \n",
              "\n",
              "[5 rows x 69 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9iNRhwVBTi0V"
      },
      "source": [
        "# We don't need the first three columns, so we can just remove them.\n",
        "dta = data.drop(['Timestamp', 'Email Address', 'Your name'], axis=1)"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sfWNDZWTUMKw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "76b8d7cf-0b91-4fd2-d5ed-98ecbfe15b29"
      },
      "source": [
        "#To find price per unit, we will index the columns for product price\n",
        "\n",
        "for column in range(6, len(dta.columns)-1, 2):\n",
        "    \n",
        "    # and divide by their quantity to get unit price\n",
        "    dta.iloc[:,column+1] = dta.iloc[:, column+1]/dta.iloc[:, column]\n",
        "    \n",
        "# the quantity columns can be removed since they are not necessary anymore\n",
        "dta = dta.drop(columns = [dta.columns[column] for column in range(6, len(dta.columns)-1, 2)], axis=1)\n"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:numexpr.utils:NumExpr defaulting to 2 threads.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "HuDLP2KNkQcp"
      },
      "source": [
        "# Adjusting Prices for Country and Exchange Rate"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p1u6JkPyUbYJ",
        "outputId": "285c22a5-e9d9-4211-f7c9-f499cca42e3f"
      },
      "source": [
        "# first of all, we need to convert the prices from the different currencies to one standard - USD\n",
        "\n",
        "# the list of different currencies\n",
        "currency_rates = {\n",
        "   \"USD\": 1,\n",
        "   \"BDT\": 0.012,\n",
        "    \"BRL\": 0.17,\n",
        "    \"CAD\": 0.79,\n",
        "    \"SEK\": 0.12,\n",
        "    \"UAH\": 0.036,\n",
        "    \"KES\": 0.0091}\n",
        "\n",
        "#\n",
        "dta['Exchange rate'] = 0\n",
        "c = 0\n",
        "for i in dta['Currency (e.g. EUR, GBP, USD)']:\n",
        "    a = currency_rates[i]\n",
        "    dta['Exchange rate'].loc[c] = a\n",
        "    c +=1\n",
        "for column in range(6, len(dta.columns)): #for all the prices\n",
        "    dta.iloc[:, column] = dta.iloc[:, column]*dta.iloc[:, len(dta.columns)-1] #multiply with the exchange rate"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  iloc._setitem_with_indexer(indexer, value)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LoovYsgfV7hQ",
        "outputId": "c633a646-ff8a-4f6c-9542-e8236c43eabd"
      },
      "source": [
        "# We also should change all the different inputs for USA to United States for similarity\n",
        "for i in range(len(dta['Country where you (and the grocery store) are'])):\n",
        "    if dta['Country where you (and the grocery store) are'].loc[i] in ['US ','USA','United States of America','USA (San Francisco)','Dallas, TX, USA','San Francisco, USA', 'San Francisco']:\n",
        "        dta['Country where you (and the grocery store) are'].loc[i] = 'United States'"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  iloc._setitem_with_indexer(indexer, value)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FcWMY_m7kQcr"
      },
      "source": [
        "# Stan Model"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MI-9wNijWcTS"
      },
      "source": [
        "#Creating dictionaries to associate products with price, product, store and country name.\n",
        "#First to the names\n",
        "product = ['Apple', 'Banana', 'Tomato', 'Potato', 'White flour', 'Basmati rice', 'Full cream milk',\n",
        "                'Butter', 'Egg','Chicken breast']\n",
        "product_dict={}\n",
        "for i in range(len(product)):\n",
        "    product_dict[product[i]] =  i+1 #because stan starts counting from 1\n",
        "\n",
        "\n",
        "country = dta['Country where you (and the grocery store) are'].unique().tolist()\n",
        "country_dict={}\n",
        "for i in range(len(country)):\n",
        "    country_dict[country[i]] = i + 1\n",
        "    \n",
        "    \n",
        "store = dta['Grocery store name and street address (or URL if shopping online)'].unique().tolist()\n",
        "store_dict={}\n",
        "for i in range(len(store)):\n",
        "    store_dict[store[i]] = i + 1\n"
      ],
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MnOpzeQrYKfs"
      },
      "source": [
        "# Now we combine all our cleaned up data so that it is usable for Stan\n",
        "\n",
        "stan_data = []\n",
        "for i in range(len(dta['Product 1 price'])): #all the rows\n",
        "    for j in range(len(dta.columns)-7): #all the relevant columns\n",
        "        product_stan = [product_dict[product[j//3]], dta.iloc[i, j+6], store_dict[dta['Grocery store name and street address (or URL if shopping online)'][i]],\n",
        "                   country_dict[dta['Country where you (and the grocery store) are'][i]]]\n",
        "        if np.isnan(product_stan[1]) == False:\n",
        "            stan_data.append(product_stan)"
      ],
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 649
        },
        "id": "K3xB1OKUYOI-",
        "outputId": "4e93a3c9-124f-49df-f0c6-0f2d0e28d1a7"
      },
      "source": [
        "dta.head(10)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country where you (and the grocery store) are</th>\n",
              "      <th>Currency (e.g. EUR, GBP, USD)</th>\n",
              "      <th>Grocery store name and street address (or URL if shopping online)</th>\n",
              "      <th>Price perception of the store brand</th>\n",
              "      <th>Average rental price near the grocery store</th>\n",
              "      <th>Rent per m^2</th>\n",
              "      <th>Product 1 price</th>\n",
              "      <th>Product 2 price</th>\n",
              "      <th>Product 3 price</th>\n",
              "      <th>Product 1 price.1</th>\n",
              "      <th>Product 2 price.1</th>\n",
              "      <th>Product 3 price.1</th>\n",
              "      <th>Product 1 price.2</th>\n",
              "      <th>Product 2 price.2</th>\n",
              "      <th>Product 3 price.2</th>\n",
              "      <th>Product 1 price.3</th>\n",
              "      <th>Product 2 price.3</th>\n",
              "      <th>Product 3 price.3</th>\n",
              "      <th>Product 1 price.4</th>\n",
              "      <th>Product 2 price.4</th>\n",
              "      <th>Product 3 price.4</th>\n",
              "      <th>Product 1 price.5</th>\n",
              "      <th>Product 2 price.5</th>\n",
              "      <th>Product 3 price.5</th>\n",
              "      <th>Product 1 price.6</th>\n",
              "      <th>Product 2 price.6</th>\n",
              "      <th>Product 3 price.6</th>\n",
              "      <th>Product 1 price.7</th>\n",
              "      <th>Product 2 price.7</th>\n",
              "      <th>Product 3 price.7</th>\n",
              "      <th>Product 1 price.8</th>\n",
              "      <th>Product 2 price.8</th>\n",
              "      <th>Product 3 price.8</th>\n",
              "      <th>Product 1 price.9</th>\n",
              "      <th>Product 2 price.9</th>\n",
              "      <th>Product 3 price.9</th>\n",
              "      <th>Exchange rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Canada</td>\n",
              "      <td>CAD</td>\n",
              "      <td>Thrifty's (https://www.thriftyfoods.com)</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>1450</td>\n",
              "      <td>10.43165468</td>\n",
              "      <td>2.759191</td>\n",
              "      <td>2.898603</td>\n",
              "      <td>2.759191</td>\n",
              "      <td>1.372105</td>\n",
              "      <td>2.062778</td>\n",
              "      <td>3.456250</td>\n",
              "      <td>6.079565</td>\n",
              "      <td>10.423128</td>\n",
              "      <td>12.157222</td>\n",
              "      <td>3.476000</td>\n",
              "      <td>3.476000</td>\n",
              "      <td>2.433200</td>\n",
              "      <td>2.366840</td>\n",
              "      <td>1.260840</td>\n",
              "      <td>1.105210</td>\n",
              "      <td>6.413813</td>\n",
              "      <td>14.779583</td>\n",
              "      <td>4.607607</td>\n",
              "      <td>2.563550</td>\n",
              "      <td>1.281775</td>\n",
              "      <td>2.786067</td>\n",
              "      <td>7.812996</td>\n",
              "      <td>11.293172</td>\n",
              "      <td>13.033260</td>\n",
              "      <td>0.397194</td>\n",
              "      <td>0.359450</td>\n",
              "      <td>0.378542</td>\n",
              "      <td>18.268750</td>\n",
              "      <td>21.395833</td>\n",
              "      <td>16.529231</td>\n",
              "      <td>0.624100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Canada</td>\n",
              "      <td>CAD</td>\n",
              "      <td>Save On Foods - Foul Bay (https://www.saveonfo...</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>1550</td>\n",
              "      <td>11.15107914</td>\n",
              "      <td>5.214000</td>\n",
              "      <td>3.476000</td>\n",
              "      <td>6.952000</td>\n",
              "      <td>1.343000</td>\n",
              "      <td>1.580000</td>\n",
              "      <td>5.214000</td>\n",
              "      <td>5.214000</td>\n",
              "      <td>6.083000</td>\n",
              "      <td>5.214000</td>\n",
              "      <td>2.449000</td>\n",
              "      <td>3.476000</td>\n",
              "      <td>1.422000</td>\n",
              "      <td>1.026210</td>\n",
              "      <td>3.946050</td>\n",
              "      <td>3.942100</td>\n",
              "      <td>2.291000</td>\n",
              "      <td>3.478436</td>\n",
              "      <td>3.946050</td>\n",
              "      <td>3.310100</td>\n",
              "      <td>2.054000</td>\n",
              "      <td>1.044775</td>\n",
              "      <td>7.638987</td>\n",
              "      <td>9.901101</td>\n",
              "      <td>13.381278</td>\n",
              "      <td>0.358792</td>\n",
              "      <td>0.493092</td>\n",
              "      <td>0.506258</td>\n",
              "      <td>6.077733</td>\n",
              "      <td>9.559000</td>\n",
              "      <td>19.133800</td>\n",
              "      <td>0.624100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Target; 225 Bush St Ste 100, San Francisco, CA...</td>\n",
              "      <td>Mid-range</td>\n",
              "      <td>2996</td>\n",
              "      <td>21.55395683</td>\n",
              "      <td>3.445996</td>\n",
              "      <td>2.637766</td>\n",
              "      <td>2.196914</td>\n",
              "      <td>1.967033</td>\n",
              "      <td>2.083333</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7.026432</td>\n",
              "      <td>2.841410</td>\n",
              "      <td>9.966667</td>\n",
              "      <td>1.141975</td>\n",
              "      <td>7.338235</td>\n",
              "      <td>5.867647</td>\n",
              "      <td>1.626984</td>\n",
              "      <td>2.076923</td>\n",
              "      <td>12.076923</td>\n",
              "      <td>5.791667</td>\n",
              "      <td>7.047059</td>\n",
              "      <td>3.615385</td>\n",
              "      <td>1.158730</td>\n",
              "      <td>1.052910</td>\n",
              "      <td>2.389222</td>\n",
              "      <td>5.325581</td>\n",
              "      <td>8.200000</td>\n",
              "      <td>14.297297</td>\n",
              "      <td>0.140833</td>\n",
              "      <td>0.132778</td>\n",
              "      <td>0.332500</td>\n",
              "      <td>13.193833</td>\n",
              "      <td>7.574956</td>\n",
              "      <td>4.680265</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Wholefoods; 399 4th St San Francisco, CA 94107</td>\n",
              "      <td>Luxury (expensive)</td>\n",
              "      <td>3360</td>\n",
              "      <td>24.17266187</td>\n",
              "      <td>5.484581</td>\n",
              "      <td>6.585903</td>\n",
              "      <td>8.788546</td>\n",
              "      <td>1.079295</td>\n",
              "      <td>3.281938</td>\n",
              "      <td>4.383260</td>\n",
              "      <td>4.383260</td>\n",
              "      <td>3.942731</td>\n",
              "      <td>6.585903</td>\n",
              "      <td>2.180617</td>\n",
              "      <td>2.841410</td>\n",
              "      <td>3.281938</td>\n",
              "      <td>3.522928</td>\n",
              "      <td>4.316578</td>\n",
              "      <td>3.214286</td>\n",
              "      <td>4.955899</td>\n",
              "      <td>4.340659</td>\n",
              "      <td>8.223529</td>\n",
              "      <td>1.527704</td>\n",
              "      <td>2.500000</td>\n",
              "      <td>5.252632</td>\n",
              "      <td>9.977778</td>\n",
              "      <td>18.644444</td>\n",
              "      <td>19.960000</td>\n",
              "      <td>0.724167</td>\n",
              "      <td>0.499167</td>\n",
              "      <td>0.482500</td>\n",
              "      <td>10.991189</td>\n",
              "      <td>13.193833</td>\n",
              "      <td>15.396476</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>Foodsco (foodsco.net)</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>4000</td>\n",
              "      <td>28.77697842</td>\n",
              "      <td>4.383260</td>\n",
              "      <td>2.621145</td>\n",
              "      <td>2.180617</td>\n",
              "      <td>1.299559</td>\n",
              "      <td>1.519824</td>\n",
              "      <td>1.740088</td>\n",
              "      <td>2.841410</td>\n",
              "      <td>3.942731</td>\n",
              "      <td>3.722467</td>\n",
              "      <td>0.664444</td>\n",
              "      <td>1.740088</td>\n",
              "      <td>2.180617</td>\n",
              "      <td>2.194046</td>\n",
              "      <td>1.185022</td>\n",
              "      <td>0.964758</td>\n",
              "      <td>4.950386</td>\n",
              "      <td>3.519824</td>\n",
              "      <td>8.892857</td>\n",
              "      <td>0.915567</td>\n",
              "      <td>2.151079</td>\n",
              "      <td>0.525066</td>\n",
              "      <td>8.127753</td>\n",
              "      <td>9.889868</td>\n",
              "      <td>10.991189</td>\n",
              "      <td>0.332500</td>\n",
              "      <td>0.374167</td>\n",
              "      <td>0.249167</td>\n",
              "      <td>13.193833</td>\n",
              "      <td>4.845543</td>\n",
              "      <td>9.889868</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>United States</td>\n",
              "      <td>USD</td>\n",
              "      <td>The Epicurean Trader (instacart.com/store/the-...</td>\n",
              "      <td>Luxury (expensive)</td>\n",
              "      <td>4000</td>\n",
              "      <td>28.77697842</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>4.760000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.125874</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.166667</td>\n",
              "      <td>35.235294</td>\n",
              "      <td>NaN</td>\n",
              "      <td>17.500000</td>\n",
              "      <td>21.071429</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.960352</td>\n",
              "      <td>8.009631</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.501654</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.803383</td>\n",
              "      <td>2.640212</td>\n",
              "      <td>5.422705</td>\n",
              "      <td>39.603524</td>\n",
              "      <td>16.233062</td>\n",
              "      <td>26.387665</td>\n",
              "      <td>0.499167</td>\n",
              "      <td>0.457500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>47.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>SEK</td>\n",
              "      <td>ICA Kvantum BEA Livsmedel - Handelsvägen 188</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>6887</td>\n",
              "      <td>49.54676259</td>\n",
              "      <td>3.480000</td>\n",
              "      <td>3.600000</td>\n",
              "      <td>2.400000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>3.240000</td>\n",
              "      <td>3.360000</td>\n",
              "      <td>3.840000</td>\n",
              "      <td>7.680000</td>\n",
              "      <td>6.480000</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>1.320000</td>\n",
              "      <td>0.720000</td>\n",
              "      <td>0.840000</td>\n",
              "      <td>0.960000</td>\n",
              "      <td>3.960000</td>\n",
              "      <td>2.820000</td>\n",
              "      <td>5.640000</td>\n",
              "      <td>1.560000</td>\n",
              "      <td>1.200000</td>\n",
              "      <td>1.040000</td>\n",
              "      <td>9.360000</td>\n",
              "      <td>9.360000</td>\n",
              "      <td>11.280000</td>\n",
              "      <td>0.360000</td>\n",
              "      <td>0.300000</td>\n",
              "      <td>0.350000</td>\n",
              "      <td>12.972973</td>\n",
              "      <td>16.735135</td>\n",
              "      <td>11.666667</td>\n",
              "      <td>0.014400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Sweden</td>\n",
              "      <td>SEK</td>\n",
              "      <td>Coop Kärrtorp - Lågskärsvägen 15</td>\n",
              "      <td>Mid-range</td>\n",
              "      <td>6887</td>\n",
              "      <td>49.54676259</td>\n",
              "      <td>2.400000</td>\n",
              "      <td>3.480000</td>\n",
              "      <td>3.480000</td>\n",
              "      <td>3.480000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.840000</td>\n",
              "      <td>4.800000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>1.560000</td>\n",
              "      <td>2.400000</td>\n",
              "      <td>1.680000</td>\n",
              "      <td>1.920000</td>\n",
              "      <td>2.160000</td>\n",
              "      <td>4.320000</td>\n",
              "      <td>3.120000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.320000</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.600000</td>\n",
              "      <td>10.080000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>0.232000</td>\n",
              "      <td>0.260000</td>\n",
              "      <td>0.290000</td>\n",
              "      <td>17.902703</td>\n",
              "      <td>13.333333</td>\n",
              "      <td>18.600000</td>\n",
              "      <td>0.014400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Ukraine</td>\n",
              "      <td>UAH</td>\n",
              "      <td>ATB, vyl. Instytutska 4, Shostka, Ukraine</td>\n",
              "      <td>Budget (cheap)</td>\n",
              "      <td>4000</td>\n",
              "      <td>28.77697842</td>\n",
              "      <td>1.026000</td>\n",
              "      <td>0.863640</td>\n",
              "      <td>0.891000</td>\n",
              "      <td>1.026000</td>\n",
              "      <td>1.080000</td>\n",
              "      <td>1.206000</td>\n",
              "      <td>1.800000</td>\n",
              "      <td>2.087640</td>\n",
              "      <td>2.188800</td>\n",
              "      <td>0.359640</td>\n",
              "      <td>0.431640</td>\n",
              "      <td>0.360000</td>\n",
              "      <td>0.576000</td>\n",
              "      <td>0.521820</td>\n",
              "      <td>0.496620</td>\n",
              "      <td>2.484000</td>\n",
              "      <td>2.160000</td>\n",
              "      <td>2.159640</td>\n",
              "      <td>0.720000</td>\n",
              "      <td>0.921240</td>\n",
              "      <td>0.827640</td>\n",
              "      <td>7.920000</td>\n",
              "      <td>8.451360</td>\n",
              "      <td>8.784000</td>\n",
              "      <td>0.124128</td>\n",
              "      <td>0.095724</td>\n",
              "      <td>0.134640</td>\n",
              "      <td>3.956400</td>\n",
              "      <td>4.165200</td>\n",
              "      <td>3.996000</td>\n",
              "      <td>0.001296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Ukraine</td>\n",
              "      <td>UAH</td>\n",
              "      <td>Silpo, vul Kharkivska 2, Sumy, Ukraine</td>\n",
              "      <td>Mid-range</td>\n",
              "      <td>10000</td>\n",
              "      <td>71.94244604</td>\n",
              "      <td>1.260000</td>\n",
              "      <td>1.241640</td>\n",
              "      <td>1.075320</td>\n",
              "      <td>1.331640</td>\n",
              "      <td>1.223640</td>\n",
              "      <td>1.223640</td>\n",
              "      <td>2.188440</td>\n",
              "      <td>2.879640</td>\n",
              "      <td>2.731320</td>\n",
              "      <td>0.467640</td>\n",
              "      <td>0.431640</td>\n",
              "      <td>0.359640</td>\n",
              "      <td>1.259640</td>\n",
              "      <td>1.223640</td>\n",
              "      <td>1.440000</td>\n",
              "      <td>3.959640</td>\n",
              "      <td>3.204000</td>\n",
              "      <td>3.437640</td>\n",
              "      <td>1.584000</td>\n",
              "      <td>1.832760</td>\n",
              "      <td>2.015640</td>\n",
              "      <td>11.518560</td>\n",
              "      <td>12.535200</td>\n",
              "      <td>16.617600</td>\n",
              "      <td>0.160200</td>\n",
              "      <td>0.144000</td>\n",
              "      <td>0.136764</td>\n",
              "      <td>4.679640</td>\n",
              "      <td>4.319640</td>\n",
              "      <td>4.518000</td>\n",
              "      <td>0.001296</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  Country where you (and the grocery store) are Currency (e.g. EUR, GBP, USD)  \\\n",
              "0                                        Canada                           CAD   \n",
              "1                                        Canada                           CAD   \n",
              "2                                 United States                           USD   \n",
              "3                                 United States                           USD   \n",
              "4                                 United States                           USD   \n",
              "5                                 United States                           USD   \n",
              "6                                        Sweden                           SEK   \n",
              "7                                        Sweden                           SEK   \n",
              "8                                       Ukraine                           UAH   \n",
              "9                                       Ukraine                           UAH   \n",
              "\n",
              "  Grocery store name and street address (or URL if shopping online)  \\\n",
              "0           Thrifty's (https://www.thriftyfoods.com)                  \n",
              "1  Save On Foods - Foul Bay (https://www.saveonfo...                  \n",
              "2  Target; 225 Bush St Ste 100, San Francisco, CA...                  \n",
              "3     Wholefoods; 399 4th St San Francisco, CA 94107                  \n",
              "4                              Foodsco (foodsco.net)                  \n",
              "5  The Epicurean Trader (instacart.com/store/the-...                  \n",
              "6       ICA Kvantum BEA Livsmedel - Handelsvägen 188                  \n",
              "7                   Coop Kärrtorp - Lågskärsvägen 15                  \n",
              "8          ATB, vyl. Instytutska 4, Shostka, Ukraine                  \n",
              "9             Silpo, vul Kharkivska 2, Sumy, Ukraine                  \n",
              "\n",
              "  Price perception of the store brand  \\\n",
              "0                      Budget (cheap)   \n",
              "1                      Budget (cheap)   \n",
              "2                           Mid-range   \n",
              "3                  Luxury (expensive)   \n",
              "4                      Budget (cheap)   \n",
              "5                  Luxury (expensive)   \n",
              "6                      Budget (cheap)   \n",
              "7                           Mid-range   \n",
              "8                      Budget (cheap)   \n",
              "9                           Mid-range   \n",
              "\n",
              "  Average rental price near the grocery store Rent per m^2  Product 1 price  \\\n",
              "0                                        1450  10.43165468         2.759191   \n",
              "1                                        1550  11.15107914         5.214000   \n",
              "2                                        2996  21.55395683         3.445996   \n",
              "3                                        3360  24.17266187         5.484581   \n",
              "4                                        4000  28.77697842         4.383260   \n",
              "5                                        4000  28.77697842         9.000000   \n",
              "6                                        6887  49.54676259         3.480000   \n",
              "7                                        6887  49.54676259         2.400000   \n",
              "8                                        4000  28.77697842         1.026000   \n",
              "9                                       10000  71.94244604         1.260000   \n",
              "\n",
              "   Product 2 price  Product 3 price  Product 1 price.1  Product 2 price.1  \\\n",
              "0         2.898603         2.759191           1.372105           2.062778   \n",
              "1         3.476000         6.952000           1.343000           1.580000   \n",
              "2         2.637766         2.196914           1.967033           2.083333   \n",
              "3         6.585903         8.788546           1.079295           3.281938   \n",
              "4         2.621145         2.180617           1.299559           1.519824   \n",
              "5         4.760000              NaN           4.125874                NaN   \n",
              "6         3.600000         2.400000           3.000000           3.240000   \n",
              "7         3.480000         3.480000           3.480000                NaN   \n",
              "8         0.863640         0.891000           1.026000           1.080000   \n",
              "9         1.241640         1.075320           1.331640           1.223640   \n",
              "\n",
              "   Product 3 price.1  Product 1 price.2  Product 2 price.2  Product 3 price.2  \\\n",
              "0           3.456250           6.079565          10.423128          12.157222   \n",
              "1           5.214000           5.214000           6.083000           5.214000   \n",
              "2                NaN           7.026432           2.841410           9.966667   \n",
              "3           4.383260           4.383260           3.942731           6.585903   \n",
              "4           1.740088           2.841410           3.942731           3.722467   \n",
              "5                NaN           4.166667          35.235294                NaN   \n",
              "6           3.360000           3.840000           7.680000           6.480000   \n",
              "7                NaN           3.840000           4.800000                NaN   \n",
              "8           1.206000           1.800000           2.087640           2.188800   \n",
              "9           1.223640           2.188440           2.879640           2.731320   \n",
              "\n",
              "   Product 1 price.3  Product 2 price.3  Product 3 price.3  Product 1 price.4  \\\n",
              "0           3.476000           3.476000           2.433200           2.366840   \n",
              "1           2.449000           3.476000           1.422000           1.026210   \n",
              "2           1.141975           7.338235           5.867647           1.626984   \n",
              "3           2.180617           2.841410           3.281938           3.522928   \n",
              "4           0.664444           1.740088           2.180617           2.194046   \n",
              "5          17.500000          21.071429                NaN           3.960352   \n",
              "6           1.440000           1.440000           1.320000           0.720000   \n",
              "7           1.440000           1.560000           2.400000           1.680000   \n",
              "8           0.359640           0.431640           0.360000           0.576000   \n",
              "9           0.467640           0.431640           0.359640           1.259640   \n",
              "\n",
              "   Product 2 price.4  Product 3 price.4  Product 1 price.5  Product 2 price.5  \\\n",
              "0           1.260840           1.105210           6.413813          14.779583   \n",
              "1           3.946050           3.942100           2.291000           3.478436   \n",
              "2           2.076923          12.076923           5.791667           7.047059   \n",
              "3           4.316578           3.214286           4.955899           4.340659   \n",
              "4           1.185022           0.964758           4.950386           3.519824   \n",
              "5           8.009631                NaN           5.501654                NaN   \n",
              "6           0.840000           0.960000           3.960000           2.820000   \n",
              "7           1.920000           2.160000           4.320000           3.120000   \n",
              "8           0.521820           0.496620           2.484000           2.160000   \n",
              "9           1.223640           1.440000           3.959640           3.204000   \n",
              "\n",
              "   Product 3 price.5  Product 1 price.6  Product 2 price.6  Product 3 price.6  \\\n",
              "0           4.607607           2.563550           1.281775           2.786067   \n",
              "1           3.946050           3.310100           2.054000           1.044775   \n",
              "2           3.615385           1.158730           1.052910           2.389222   \n",
              "3           8.223529           1.527704           2.500000           5.252632   \n",
              "4           8.892857           0.915567           2.151079           0.525066   \n",
              "5                NaN           5.803383           2.640212           5.422705   \n",
              "6           5.640000           1.560000           1.200000           1.040000   \n",
              "7                NaN           1.320000           1.440000                NaN   \n",
              "8           2.159640           0.720000           0.921240           0.827640   \n",
              "9           3.437640           1.584000           1.832760           2.015640   \n",
              "\n",
              "   Product 1 price.7  Product 2 price.7  Product 3 price.7  Product 1 price.8  \\\n",
              "0           7.812996          11.293172          13.033260           0.397194   \n",
              "1           7.638987           9.901101          13.381278           0.358792   \n",
              "2           5.325581           8.200000          14.297297           0.140833   \n",
              "3           9.977778          18.644444          19.960000           0.724167   \n",
              "4           8.127753           9.889868          10.991189           0.332500   \n",
              "5          39.603524          16.233062          26.387665           0.499167   \n",
              "6           9.360000           9.360000          11.280000           0.360000   \n",
              "7           9.600000          10.080000          12.000000           0.232000   \n",
              "8           7.920000           8.451360           8.784000           0.124128   \n",
              "9          11.518560          12.535200          16.617600           0.160200   \n",
              "\n",
              "   Product 2 price.8  Product 3 price.8  Product 1 price.9  Product 2 price.9  \\\n",
              "0           0.359450           0.378542          18.268750          21.395833   \n",
              "1           0.493092           0.506258           6.077733           9.559000   \n",
              "2           0.132778           0.332500          13.193833           7.574956   \n",
              "3           0.499167           0.482500          10.991189          13.193833   \n",
              "4           0.374167           0.249167          13.193833           4.845543   \n",
              "5           0.457500                NaN          47.000000                NaN   \n",
              "6           0.300000           0.350000          12.972973          16.735135   \n",
              "7           0.260000           0.290000          17.902703          13.333333   \n",
              "8           0.095724           0.134640           3.956400           4.165200   \n",
              "9           0.144000           0.136764           4.679640           4.319640   \n",
              "\n",
              "   Product 3 price.9  Exchange rate  \n",
              "0          16.529231       0.624100  \n",
              "1          19.133800       0.624100  \n",
              "2           4.680265       1.000000  \n",
              "3          15.396476       1.000000  \n",
              "4           9.889868       1.000000  \n",
              "5                NaN       1.000000  \n",
              "6          11.666667       0.014400  \n",
              "7          18.600000       0.014400  \n",
              "8           3.996000       0.001296  \n",
              "9           4.518000       0.001296  "
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ag2F05AtYPQS",
        "outputId": "38aa236b-1a48-409e-9ce1-1e52fdaef04f"
      },
      "source": [
        "#Stan model\n",
        "#Most bits and pieces of the model have been taken from previous class sessions\n",
        "\n",
        "stan_model = \"\"\"\n",
        "\n",
        "// The data block contains all known quantities - typically the observed data and any constant hyperparameters.\n",
        "data {\n",
        "    int<lower=0> dataset;  // length of dataset\n",
        "    int<lower=0> total_products;  // total number of products\n",
        "    int<lower=0> total_store;  // total number of stores\n",
        "    int<lower=0> total_countries;   // total number of countries\n",
        "    int<lower=0> product[dataset];   // total type of each product \n",
        "    real<lower=0> price[dataset];   // total price of each entry\n",
        "    int<lower=0> store[dataset];   //  store of each entry\n",
        "    int<lower=0> country[dataset];   // country of each entry\n",
        "    \n",
        "    real<lower=0> mu;   //      hyperparameter for base price multiplier\n",
        "    real<lower=0> sigma;   //   hyperparameter for base price multiplier\n",
        "    \n",
        "    real<lower=0> a1;   //      hyperparameter for store multiplier\n",
        "    real<lower=0> beta1;   //  hyperparameter for store multiplier\n",
        "    \n",
        "    real<lower=0> a2;   //      hyperparameter for country multiplier\n",
        "    real<lower=0> beta2;   //  hyperparameter for country multiplier\n",
        "}\n",
        "\n",
        "// The parameters block contains all unknown quantities - typically the parameters of the model. \n",
        "parameters {\n",
        "\n",
        "    real<lower=0> base_price[total_products];  //           unknown base price\n",
        "    real<lower=0> store_multiplier[total_store];   //      unknown store multiplier\n",
        "    real<lower=0> country_multiplier[total_countries];   //  unknown country multiplier\n",
        "    real<lower=0> variance_total;   //                        unknown variance  \n",
        "}\n",
        "\n",
        "// The model block contains all probability distributions in the model.\n",
        "model {\n",
        "\n",
        "    // \n",
        "    for (i in 1:total_products) {\n",
        "        base_price[i] ~ normal(mu, sigma);  // Truncated normal since base_price is lower-bounded at 0\n",
        "    }\n",
        "    //\n",
        "    for (i in 1:total_store) {\n",
        "        store_multiplier[i] ~ gamma(a1, beta1); // Store Multiplier as a Gamma\n",
        "    }\n",
        "    //\n",
        "    for (i in 1:total_countries) {\n",
        "        country_multiplier[i] ~ gamma(a2, beta2); // Country Multiplier as a Gamma\n",
        "    }\n",
        "    //\n",
        "    variance_total ~ gamma(0.5, 1.5); // Variance\n",
        "    \n",
        "    for (i in 1:dataset) {\n",
        "        price[i] ~ normal(base_price[product[i]]*store_multiplier[store[i]]*country_multiplier[country[i]], variance_total);\n",
        "    }  //The likelihood function; truncated since lower bound is at 0\n",
        "\n",
        "}\n",
        "\n",
        "\"\"\"\n",
        "\n",
        "stan_model = pystan.StanModel(model_code = stan_model)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:pystan:COMPILING THE C++ CODE FOR MODEL anon_model_0a561886089bab8fb259074de5edee67 NOW.\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m2IGkj1VYbU7"
      },
      "source": [
        "model_data = {\n",
        "    \"dataset\": len(stan_data),\n",
        "    'total_products': len(product_dict),\n",
        "    'total_store': len(store_dict),\n",
        "    'total_countries': len(country_dict),\n",
        "    'product': [i[0] for i in stan_data],\n",
        "    'price': [i[1] for i in stan_data],\n",
        "    'store': [i[2] for i in stan_data],\n",
        "    'country': [i[3] for i in stan_data],\n",
        "    'mu': 2,\n",
        "    'sigma': 0.75,\n",
        "    'a1': 2,\n",
        "    'beta1': 0.5,\n",
        "    'a2': 2,\n",
        "    'beta2': 0.5,\n",
        "}\n",
        "result = stan_model.sampling(data = model_data)"
      ],
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "DbaecSAbkQcu"
      },
      "source": [
        "# Base Price Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hWX9eI52YyTF",
        "outputId": "15d4e7c2-8a73-4ed7-be22-d24088d7f5f1"
      },
      "source": [
        "print(result.stansummary(pars=['base_price']))"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Inference for Stan model: anon_model_0a561886089bab8fb259074de5edee67.\n",
            "4 chains, each with iter=2000; warmup=1000; thin=1; \n",
            "post-warmup draws per chain=1000, total post-warmup draws=4000.\n",
            "\n",
            "                 mean se_mean     sd   2.5%    25%    50%    75%  97.5%  n_eff   Rhat\n",
            "base_price[1]    1.08  5.5e-3   0.18   0.74   0.94   1.07    1.2   1.45   1133    1.0\n",
            "base_price[2]    0.61  3.1e-3   0.12   0.39   0.52    0.6   0.69   0.87   1558    1.0\n",
            "base_price[3]    1.43  6.9e-3   0.24    1.0   1.27   1.42   1.59   1.91   1155    1.0\n",
            "base_price[4]    0.77  3.7e-3   0.14   0.52   0.67   0.76   0.86   1.06   1377    1.0\n",
            "base_price[5]    0.72  3.8e-3   0.13   0.48   0.62   0.71    0.8   0.99   1198    1.0\n",
            "base_price[6]     1.2  5.6e-3    0.2   0.84   1.06   1.19   1.34   1.61   1300    1.0\n",
            "base_price[7]    0.46  2.4e-3    0.1   0.28   0.39   0.45   0.52   0.66   1745    1.0\n",
            "base_price[8]    2.99    0.01   0.47   2.15   2.66   2.97   3.31   3.94   1022    1.0\n",
            "base_price[9]    0.15  1.3e-3   0.07   0.03    0.1   0.14   0.19    0.3   2704    1.0\n",
            "base_price[10]   2.63    0.01   0.41   1.87   2.34   2.62   2.91   3.47   1063    1.0\n",
            "\n",
            "Samples were drawn using NUTS at Fri Mar 12 22:39:04 2021.\n",
            "For each parameter, n_eff is a crude measure of effective sample size,\n",
            "and Rhat is the potential scale reduction factor on split chains (at \n",
            "convergence, Rhat=1).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 601
        },
        "id": "00qDy_D2ZH1K",
        "outputId": "0e729584-73f8-4db6-82dc-87923274eae5"
      },
      "source": [
        "samples = result.extract()\n",
        "\n",
        "product_list={}\n",
        "for i in range(len(product)):\n",
        "    product_list[i+1] =  product[i] \n",
        "plt.figure(figsize=(20,10))\n",
        "for i in range(len(product_dict)):\n",
        "    plt.hist(samples['base_price'][:, i], label = product_list[i+1], density = True, alpha=0.6)\n",
        "plt.legend()\n",
        "plt.xlabel(\"Price\")\n",
        "plt.ylabel(\"Density\")\n",
        "plt.title(\"Base price distribution of each product\")\n",
        "plt.show()"
      ],
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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OZ09AQAAANAidYdFN954Y1x77bXR3t4e73vf++KMM86Iz3/+8/H4449PZ38AAAAANNGErll05JFHxiWXXBI/+tGP4sMf/nDcfPPN8YY3vCHe9ra3xY033hhZlk1XnwAAAAA0QXmiAx599NG48cYb48Ybb4wkSeL9739/LFmyJK677rr44Q9/GJ/73Oemo09oua7SYEStf2qTlNpjR62tMQ0BAADANKg7LLruuuvihhtuiEceeSTOOuusuPrqq+OVr3xlsf+MM86IE088cVqahBmh1h/P/PifpjTFgpPPjwhhEQAAADNX3WHRj3/843jHO94Rp512WlQqlWH7Ozs74+///u8b2hwAAAAAzVX3NYtOOOGEOOuss4YFRV/5yleKxyeddFLjOgMAAACg6eoOi9asWTPi9i984QsNawYAAACA1hr3NLQ77rgjIiJqtVr87Gc/izzPOKgfEAAAIABJREFUi32PP/54dHd3T193AAAAADTVuGHRZZddFhERAwMDcemllxbbkySJRYsWxeWXXz593QEAAADQVOOGRWvXro2IiIsvvjiuvvrqaW8IAAAAgNap+25oUw2K3vOe98Tjjz8eaZpGV1dXfOhDH4oVK1ZMaU4AAAAAGmvMsOiss86K73//+xERccopp0SSJCPW3XbbbeMutHr16ujp6YmIiFtuuSUuvfTS+Pa3vz3BdgEAAACYTmOGRVdeeWXx+OMf//iUFtodFEVEbN++fdTgCQAAAIDWGTMsOu6444rHJ5xwwpQXu+yyy+KnP/1p5HkeX/rSlyY0duHCOVNefyZYtKhn3Jr+ndXo6GwbsyZNknFr6q2rd65KpRw988bvfzIGn+2Ljo7KpMYmaTKpsZVKObrnddRdP7hlZ13v05hrtpWiu3d63sN9ST2fI2BsPkcwdT5HMDU+QzB10/U5qvuaRV/5ylfid3/3d2PFihXxi1/8Iv78z/880jSNT37yk3HsscfWNcdHP/rRiIj4zne+E1dffXX84z/+Y92Nbtq0PbIsr7t+Jlq0qCeeemrbuHUdlWr07RwcsybL83Fr6q2rd66BgWps3T5+/5PRFUn09Q1Mamye5ZMaOzBQjS11/H3s1hW1ut6nMdccrE1oTYar93MEjM7nCKbO5wimxmcIpm6qn6M0TUY9MCetd5Jrr702li1bFhERn/zkJ+MP/uAP4k/+5E/iqquumnBD5513Xtx5552xefPmCY8FAAAAYPrUfWTRtm3boqenJ7Zv3x733ntvXHvttVEqlWL16tXjjn3uuedi69atsWTJkoiIWLt2bcybNy96e3sn3zlMUamURlctq78+uqL36NMjIiKr7oitv7l9uloDAACAlqk7LFqyZEn8/Oc/jwceeCCOO+64KJVKsX379iiVSuOO3blzZ/zZn/1Z7Ny5M9I0jXnz5sU111zjIte0Vi2Pp+94tO7yclSjf8ODERGx6NQV09UVAAAAtFTdYdHFF18c73//+6NSqcRnP/vZiIi49dZb4+ijjx537H777Rff+MY3Jt8lAAAAAE1Rd1h0yimnxO23Dz3t5swzz4wzzzyz4U0BAAAA0Bp1h0URu65b9NBDD8Vzzz03ZPvKlSsb2hQAAAAArVF3WPStb30rrrjiiujq6oqOjo5ie5Ik8a//+q/T0hwAAAAAzVV3WPTpT386PvOZz8Qpp5wynf0AAAAA0EJpvYW1Wi1OOumk6ewFAAAAgBarOyx65zvfGV/4whciy7Lp7AcAAACAFqr7NLRrr702nn766fjSl74Uvb29Q/bddtttje4LAAAAgBaoOyz6+Mc/Pp19AAAAADAD1B0WnXDCCdPZBwAAAAAzQN1h0cDAQKxZsyZuuumm2LJlS/zXf/1X3H777fHwww/H29/+9unsEfYapVIaXbXtU5ykPXbU2hrTEAAAALxI3WHRVVddFRs3boxPfOIT8c53vjMiIg4//PD42Mc+JiyCetUG4pkff2dKUyw4+fyIEBYBAAAwPeoOi2655Zb44Q9/GF1dXZGmu26itnjx4ti4ceO0NQcAAABAc6X1Fra1tUWtVhuy7Zlnnhl2ZzQAAAAAZq+6w6IzzzwzLrnkknjsscciIuLJJ5+MK664It70pjdNW3MAAAAANFfdYdEHPvCBOPDAA+Occ86JrVu3xhlnnBGLFi2K9773vdPZHwAAAABNVPc1ix599NE45JBD4t3vfnfUarV4/etfH8uXL5/O3gAAAABosnHDojzP49JLL43vfOc7ccABB8T+++8fGzdujDVr1sS5554bV111VSRJ0oxeAQAAAJhm44ZF119/ffz7v/97XH/99fGKV7yi2P7f//3f8Zd/+Zfx9a9/Pd761rdOa5PALh3LXxt9tY7II2/YnOW2UtSyrGHzAQAAMLuNGxbdcMMNcfnllw8JiiIiXvGKV8Sll14aX/ziF4VF0CS1Umf89F/ujWq0jbi/lGeRZ7UR943m5NOXR3vWN2ZNUmmPvmTkNQEAANi7jBsWrVu3Lo4//vgR9x1//PFx8cUXN7wp2Ft0LH9t1EqdxfMdte5oe9nrJz1f2j0/Ip4ddX+e1WL7ugcnNGffE/PiiVtvGbPmdy44P6JdWAQAALAvGDcsqtVqMWfOnBH3zZkzJzKnr8CoaqXOuO27dxXPO5ccHDs3PDzp+U596xum3hQAAACMYdywqFqtxs9+9rPI85GvkVKrTeyUFwAAAABmrnHDooULF8all1466v4FCxY0tCEAAAAAWmfcsGjt2rXN6AMAAACAGSBtdQMAAAAAzBzCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACuVWNwD7ora5iyJJJp7VJqVyRC2LNAZH3J9GPtXWAAAA2McJi6AFkiSNbffdN+FxWd9RsX3dg5GNclBgz6EHT7EzAAAA9nVOQwMAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAAAAoFBudQPQDOUki8izIduSyKMc1brnSCJvdFsAAAAw4wiL2DfkWfRveHDIpqy6dNi2sXQsObjBTQEAAMDM4zQ0AAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAKwiIAAAAACsIiAAAAAArCIgAAAAAK5WYssnnz5rj44ovj0UcfjUqlEgcddFBcccUVsWDBgmYsDwAAAECdmnJkUZIk8Ud/9Efxgx/8IL773e/GgQceGJ/4xCeasTQAAAAAE9CUsKi3tzde85rXFM9f+cpXxvr165uxNAAAAAAT0JTT0PaUZVl87Wtfi1WrVk1o3MKFc6apo+ZatKhn3Jr+ndXo6GwbsyZNknFr6q2rd65KpRw988bvfzIGn+2Ljo7KpMYmaTLu2GygFqXS0Gw0iWTYtjHXiSjq01Ja13uWp2mU91gjiWTX8ySJZDJRbbLrSL3yKH0nSRLl8sQmrue1VCqlmFvHv91mqedzBIzN5wimzucIpsZnCKZuuj5HTQ+Lrrzyyujq6oq3v/3tExq3adP2yLJ8mrpqjkWLeuKpp7aNW9dRqUbfzsExa7I8H7em3rp65xoYqMbW7eP3PxldkURf38CkxuZZPu7YcuRRq2VDx42wbcx1Ior6rJbV9Z61ZVlU91ijLfKo1rKo5Hnk9S89pIk8z6NWHXlwnudRHWXfaOp5LQMDtdhWx7/dZqj3cwSMzucIps7nCKbGZwimbqqfozRNRj0wp6lh0erVq+ORRx6Ja665JtLUjdgAAAAAZpqmhUWf+tSn4u67745/+Id/iEplcqcbAQAAADC9mhIW3X///fHFL34xDj744LjwwgsjImLZsmWxZs2aZiwP7EPyNI2BwVpT1qq0lSLJJnM+IQAAwMzVlLDo8MMPj3vvvbcZSwEzTKPDmyef2REDtdGvX5ZnWVz/L835enPhG5ZHeylpyloAAADN0vQLXAP7loHBWny9geFNR0db9PWNfkHu33v98oatBQAAsC9ylWkAAAAACsIiAAAAAArCIgAAAAAKrlkE7JNed/R+0dk2tTuZVWJHJBOYolRuj2rmyy4AADCz+akF2Cd1tmWx9qZvTWmOly7rjXQCN0M74bQ3R6S+7AIAADOb09AAAAAAKAiLAAAAACg4H4K6lUppdFT6xi5K2qKvv9SchgAAAICGExZRtzyvxvoH1o5Z85KXvj4ihEUAAAAwWwmLgHGVS2lE//ZJjW3LI84+unfEfdtrpbjtnk1TaQ0AAIAGExYB48oGB+LR//OdSY2t5Xmse/zZEfe97A8unEpbAAAATAMXuAYAAACg4Mgi2Me1L1wQvae+fsya/nL3uDUvFO+MLf/20wZ0BgAAQCsIi2DWSSKNbJQ9Meq+F1dmkURERC1PY+237xqzuufQg2Pbgw/X1d2q/3VsXXUAAADMTMIimHWyqO0Y+WLTeZZFbce2cWcodfVEPB8WAQAAwJ5cswgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgEK51Q3AbFSeuyB6jz593Lpkzn5x4ukri+el9s7YvmV+/Pq/109newAAADBpwiKYjDyNp279zbhl6fylsf6Rp4vn5a6eOOC1S6ezMwAAAJgSYRHA3qpSjYFsoNVdRCWtRAz47wYAAGYL370D7KUGsoH4p7u/3+o24vyXnxUV/90AAMCs4bt3gCYpldKo1Z5r2nqVwVqsWnps9OXV+Lf1v2raugAAwOwmLAJokqw2GP/+r//cvPXSajz4zGNx6pkXNG1NAABg9ktb3QAAAAAAM4ewCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAQrnVDcBMUZp3QORpadT91awc6fylzxdXXng8hqTc3qj2mIGSNIksy+uuz/OICZQPk6bJrkkAAACmkbAInpenpVj/yNOj7i939UR1x7aIiFgwUB2zdreXHLasYf0x82RZHuse31J3/bGDtXhgAvUv9tJlvZEmkx4OAABQF6ehAQAAAFAQFgEAAABQEBYBAAAAUBAWAQAAAFAQFgEAAABQcDc0oKVed/R+0dmW1V2fpmlk2ej1HcmOOP1VC8adZ/6cSt1rTtTi/ToiLQ3f3lZOY8nijknPm6fVyCZyNzR3TgMAACZBWAS0VGdbFmtv+lbd9eVyGtXq6GHRYct667qd/f990QV1rzlRaSnivqceHrb9xOrAiNvrNbe7EskEEqBDFiyb9FoAAMC+y2loAAAAABSERQAAAAAUhEUAAAAAFIRFAAAAABSERQAAAAAUhEUAAAAAFIRFAAAAABSERQAAAAAUhEUAAAAAFIRFAAAAABTKrW5gX1Id2BEdlb5x69I0b0I3AAAAAMMJi5qoVuuP9Q/cMm7dsiNWNaEbAAAAgOGchgYAAABAQVgEAAAAQEFYBAAAAEBBWAQAAABAwQWuaZhSkkQpIroimfDYNJn4GGB2KJXSGIgdLe2hklYiBvyXBwAA9fCdMw2T5HkMbOmLZ3/51ITHLl550DR0BMwEg1k1vnX3D1raw/kvPysq/ssDAIC6OA0NAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAgrAIAAAAgIKwCAAAAICCsAgAAACAQrnVDcBMlrZ1RiRJRETkeURa6YqIiCRJi8djSdKhdXkekbZVIilXpqfhCchHeVxP/Xh1tXzP6qTungAAAGg9YRGMJUlicMuWXQ/LbZFXByMiIq/Viu1jyZfOH1KXlNui+tyOmAkBytbtAxERUcuy4vFourN83JrddvRVY93jzxbPD102b/JNAgAA0HRNOQ1t9erVsWrVqli+fHncd999zVgSAAAAgEloSlh02mmnxXXXXRdLly5txnIAAAAATFJTTkM77rjjmrEMAAAAAFM0a65ZtHDhnFa3MGX9OzdHR2fbuHVpkoxbV09Ns+fKBmpRSpPo6Jj4xZuTSY6rd2w2UItSaeiBdEkkL9qWRJoMv5bQ7k1JJEMuNTRC6QjNDa1Lds3yfN91jB9pvkjGHFvvvEladLLH49EXHr/m+cpk6Ps6/H1+QZqmkaZplMsTezPGq69nviSSCa9b71pJsut9GHHduv7hjCxJkiin9fecJEmUS2mU0jQ6O8b/jE+XNE1aun5ERKVSjkXze1raw0yzaJH3A6bK5wimxmcIpm66PkezJizatGl7ZFm992OamebOiejbOThuXZbn49bVU9PsucoRUcvy6Our70LIe8onOa7eseXIo1bLho570bY08sjyof/G0th1B7NixB678zpvITa0Li/uKpZnI9TXM1/kY46td968+DzlezwefeHxa56vzIe+ry9+n/eUZVlkWUS1Wv+bUS6n49bXM18e+YTWnchaeb7rfRhx3br+4Ywsz/OojvJejlVfy7LY2Tf+Z3y6ZFne0vUjIgYGqvHUjm0t7WEmWbSoJ556yvsBU+FzBFPjMwRTN9XPUZomox6YM2vCIgAmZ0FXb6xaemxT1+zLq/Fv63/V1DUBAIDGEBYB7O1qWdx68/VNXfLUMy9o6noAAEDjNOVuaB/5yEfi5JNPjieeeCLe8Y53xJve9KZmLAsAAADABDXlyKLLL788Lr/88mYsxV6onGRjXogniTzKUR1zjiRm9/WuAAAAoFmchsbMl2fRv+HBUXdn1aVj7o+I6FhycIObAgAAgL1TU05DAwAAAGB2EBYBAAAAUHAaGgDAGJL2Ugzm+9a179qSJPL+WqvbAABaRFgEADCGwTyP7963odVtNNWbj1jim0QA2If5PgBomYXzOqOaZnHQgkrdY5IkiXyM3/C3ZYPxkvkdsX5zXyNaBAAA2OcIi4CWSbNqbH9iY2y+b13dY8YLi2rdlWhbemAj2gMAANgnCYtoqLae9ph3zNg1+UASW3+ztTkNAQAAABMiLKLBqvE/v755zIqlR53ZpF4YXRI9nbtuhlhKX3g8mlIyvCbLk3iuz8VPAQAA9jbCItgnZTG4fdfRXXmtVjweTZ4Nr2mbM3faugMAAKB1hEVAQ809YFEc9XvnFc+7OsrR2VcdsTbr6Ik5B+Qx/9CDx5wzrw7Glkf/p5FtAjCGUimNav33Hpj12pIk8n5HywLAbsIioKGySOKH/+e/iudz51Ri6/aBEWuXvHxrHPmyOfH4g0+POeeyQ/draI8AjG0wy+N7921o6JxpEpHlWUPnbJQ3H/GSKMfghMY8++yzEdHYgKlcLke1mjR0TgCYDGERAADTLsuz2LhxY6vbGNGW/bvi/l/+ckJjOjsrsXPnyL8MmayVK1dGRFtD5wSAyRj7qrYAAAAA7FOERQAAAAAUhEUAAAAAFFyzCNhrdHaUIpI82iulWLK4Y8zatnI6bs240uqIc7S3yeEBAIDZS1gE7DWSJGJr//bIB3fGfZufGLP2xOpA3PfUw1Nab25XJbbuGH5x06OXHjqleQEAAFrJr78BAAAAKAiLAAAAACgIiwAAAAAouGYRNFnv4vlxfPecqB69eMJju7s7p6EjAAAAeIGwCJosTdL4n39dFwObN0147H7v3n8aOgIAAIAXOA0NAAAAgIKwCAAAAICC09AA2OuVSmkMxI5WtxGVtBIx4L9eYGTlchrV6mCr25jRyuVyVKtJq9sA2Ov5jhWAvd5gVo1v3f2DVrcR57/8rKj4rxcYRbVajTvuuLPVbcxoK1eujIi2VrcBsNdzGhoAAAAABWERAAAAAAXHwgMAdUvaSzGY561uo7kS10cBAPYtwiKAWSKJJPKY2A/pu+snOi5JkpjgEPYRg3ke371vQ6vbaKo3LX9Jq1sAAGgqYRHALJHneWzdMVB3fa03j63PDUSW7fpzIuZ2VyIJR1NAvdIkIsuzVrfRYI19PQ7QAoDZQ1gEADBFWZ7Fxo0bW91Gw1QPW9zw17N48eKGzgcATB9hERAREce9+bho766MuK+tpycGX9Y9ZFtSKkctG36eUqW9Gqf+3rHF83IpjWpt5N9Ot8/pis7O0hS6BgAAoNGERUBERLR3V+K2b31txH0dCxdG36ZNQ7albZUYrA4Piw55+YHx0N2PFc8rbWkMDI4cFnUtmBdnXfh7U+gaAACARktb3QAAAAAAM4ewCAAAAICCsAgAAACAgmsWAQCwT+uZMycOP+aYCY1J0zSybORr8k1WtdI+4T4mK+vvj3W//W1T1gJg9hEWAQCwT6slSfzTrx6a0JhyuRTVaq2hfSxevDg2btzY0DlHc/7RhzRlHQBmJ6ehAQAAAFAQFgEAAABQEBYBAAAAUBAWAQAAAFAQFgEAAABQEBYBAAAAUBAWAQAAAFAQFgEAAABQKLe6AQD2Pgu6emPV0mMjIqJ9MCseT7e+vBr/tv5XTVkLAAD2VsIiABqvlsWtN18fERGHLFgWDz3zeFOWPfXMC5qyDgAA7M2chgYAAABAQVgEAAAAQEFYBAAAAEBBWAQAAABAwQWumbVK8w6IPC1FlCqRzl86Zm01Kw+vedG4pNw+HW0CAADArCIsYtbK01Ksf+TpWDBQjfWPPD1mbbmrJ6o7tg3Z9uJxLzls2bT0CQBAY5TLaVSrg61uY8Yql8tRrSatbgPYCwiLAACAWaFarcYdd9zZ6jZmrJUrV0ZEW6vbAPYCrlkEAAAAQEFYBAAAAEBBWAQAAABAQVgEAAAAQMEFrgGAMZXLeVSr1eefVSIia2U7LTL2a07cfAgA2IsIi2AWysfYM/q+xkqTiLby8J+OkhdtTyIfsW7XPmA22HX3oTsiIuLwY46JjRs3trij5qoetnjc17x48eImdQMAMP2ERTBDZFkdMU8ekecRg4O1kXePsW9PjfrgZ4MDIzYxZHua1PfaAAAAmBGERTRdW097zDtm6La8siPmHdMzdNtAElt/s7WJnQFMzAkHHR+VUmf9A9KuqFZaf7nATTv6J9hHJQ4/ZtcX7q7u7ulpCgCAGUNYxBClJIkkH/kokCTG+QdT9wUbqvE/v755yJbOxT2xc+O2IduWHnVmnfOxt6t0dcb8Qw+OiIgkSSIf5d9oqZREe16LcqUrDl9w4KjzDebVUffBRFRKnXH9Pevqrj9s4WDkM+BIu7ZyW9QGJ9JHVpyG9fsnvmJ6mgIAYMYQFjFEkufRt3H7iPvyQ2qj7ovYFfjAdMgj4vEHn46IXZnkKFlRlMtJVLNqtM2dG1v6d44638EH7TcNXcL4sjyPhzY/1uo24qX7HRRuiAoAwGiERcBep5yWord99FODutsq0VEux5HzD5jQvAN5Fg9ueXKq7c0KSSRTvlz6nuPHmytJkrGu3A4AADSRsAiYsrRcfuHWZkkSadsLX1qSSCItjZICJLuOFCqPcre0omyPmiRGzxR2nwmZRET/s8+OOt/ggvao9vXHpnvvG3PdF1u4/IgJ1c9meZ7H1h0jXMC8TlmWx9bndo2v9b7weDRzuyuRuD8eQNP0zJlTXItsNqlW2ifdd9bfH+t++9sGdwSwdxIWMeslSRpppWvMmjyPYTUvHpekw+dJEqdp1CWJGKgORsSukGH344ixrzHUlueR5XkM1AZH3L9bnse4NRER7eW2CTQNAPuuWpLEP/3qoVa3MWGLFy8urqE2UecffUiDuwHYewmL2CsMbtky5v6k3BZ5dWjYkNdqQ8blS+cPm6cyf2HjmgQAAIBZwGETAAAAABSERQAAAAAUnIbGtEqSGPE+58mwSxTnw7YlkUU5qiPU7rvKlXKcfN5rI6tVR9zfNqcnBo9ePOK+57Y9F3fc+NPpbA8AAIC9gLCI6ZXnUduxdeimrDZ8W949bFvWvzP6NzwYHUsOnu4uZ428lsdjP/ht1AZGvrNU+8KF0b9p04j7fueNL5vO1gAAANhLOA0NAAAAgIIji4CWSiIiTcavG6smc6YiAECUy2lUX3QH4Jnq2WefjYha09ctl8tRrdbxzSfs44RFQEvlEZFn2bhVo9UkqQMkAQAiIqrVatxxx52tbqMunZ2V2Llz5EsrTKeVK1dGRFvT14XZRlgEM9CigxZF2lYatj1JIhYdtDDyES4aHhFRamuL2vyR//PrPaA3XnvhibvqyuWoVXddJLvckcVrLzwx5u0/t0HdAwAAMJsJi2AGSttKseGhB4ZtXzp4eGx4eN2oR9mU2tuj1t8/4r625Z1x27e+FhER5Uolqs9fJPugow+JR371UPyv9/5Jg7qH1lnQ1Rurlh47bHv7YDbi9qnq6Zgbi7sWxMYdzzR8bgAAaBVhEQB7j1oWt958/bDNhyxYFg8983jDlzvptIuinDgVEgCAvYuwCKBOXZWOOHL+AcXzcimNavvwo7w6avmQumJ7uTzi9oE8iwe3PNnYZgGAIXrmzInDjzmm1W1Mq2qlfchrzPr7Y91vf9vCjoDZSljEjFWZ3xPzTz0ySu2d0Xlkx7D9SVtHlA/paUFn7KuSPItN995XPK+0pTEwOMIpgXN6YtP2bcM2V0/rHzJ+t4XLj2hon610yv91XrR3zYuke0Gc/sb/NyIiejo6Y0nfzjHHtZXTyKMBt7Xrmh+vPe2twze3dcRLBvsiIiKJxt0BZV7voohN6xs2XzNlSbXu2jSSiGSPv5+kUbcgTKIRf+0A9aglSfzTrx5qdRvTavHixbFx48bi+flHH9LCboDZrGlh0UMPPRQf/OAHY8uWLdHb2xurV6+Ogw8+uFnLMwOknT0RkUSSliLtHHox5SRJh22LUhLr7/9x7Lq5+kg/TSSx32Grpqnb3abrp5jGzJskSQz9uTeJZJR7zC84YHGcecH/s3tgxPMXye6Y0xkrXrYzejrnv7D/RXYO9sdPvvutIdvyiEjbnv8SMstOw6l0dUa5vSP2P3T5xAaW2oeMSdKIPIuoVftj06MPN7bJWaq9a158/a7fxBHb0rjvgd9ERMSC7rnxzHNbxxzXVk5jsDreXfHGd8RLk7jvgXuGbd+zh7a2dEhgtP+iZVEuT+6uKP97cVe0l9vjJd3711Wf5kndtdOqlkffwMjXNxtJe7kttvZt3zV1o4cmAAALU0lEQVQ0y4rHUzW3Y05EA8M7AAAao2lh0Yc//OG46KKL4txzz40bbrgh/vqv/zq++tWvNmt5ZoQktj2zLWrVWmx7ZuhRF5VF3cO27a5LkjTyfPgPkXPm90Rnb0ek7f1x+P8e+4f+weciHv7BvRPuOI+ILNsVqpT2eJxHXjyud/zuOfLnj5/Yc3s6SsAzrmTXD27FPJEPeb6nNErx0Pd/uWvYHu/p3AVzY+szWyM5qhoP/frXI4499M2vjoHq4ND50jSy59eqtLVPrv8GSCKJ9PmjHJLYlYNFRIz9lqYx2D8Y//PwrlO/6virjIiIOfOrsX3zCxcyTpMksjyPAw+ZAT/8M2nlcls8/vhjkxo7uOKQeGrjU1HLa3XVb0tLUcvqqx1PFnnsHKw/8NnT3I45Ewp8DjvQb6YB2DuUy2lUX/R9LUOVy+WoVv0yZ1/XlLBo06ZNcc8998RXvvKViIg4++yz48orr4xnnnkmFixYUNcck/5heiZJ0ihXuscvq6OunprJzFWOiLbOUerSUrR1zhl1nnKle1hNEnnsPuYk7ZgT7d27jixq7547bOyLtxV1uw/feJG2zu5Iykk89egdsXnd2Nd7WXbUadE+b+gLS0rpkG3lrrZhNQsP6o1YNmf3iykOCKp0VmLZMQeNuWZERFt3eWhdsmvs4kN6I1s2+ntZ6ShHxzPD/96SUhod87qLu6ElaTIkHCpX2qM0UBpxzt1jI4aGRZWezuio1aLcVSn2v9iCxfvHOW/7/4bO98LBSUOCo445HfHyY/qKuh07t8edt/7LiPN2zZsXpXI5eubPH3H/bp3dPaPWDAmtypUYrA1G57y5kY7xw3tn95xIy+WYM29eJGlad1jUPW9eJHscFbY7LJq3aP/o6nnh32+5VIqe2vD1K13dcfAxxw/b3t7dHStffC2jJI/+gaGnbpVLaVRr9R99093ZFfPmzo9SqRzz5o79Hr/YnM62SMoT/0aq0tYW87u7oqd9158REfO6OiOPsU95atSRRXuuu6c9e6iUS0NOeetpr4w4ph7lNI15ne2xfawjp/b42tGWRwzm9Z/+NZaurjmxo21yR/XNaW+PUlp/aNVTaYv5Xbu+PpbTtHg8VXPaWxc0DzX26XClNIl5nWP3OqdSjr5xamaTel7zRM3k92gyr7dcLkW12pjwd7dmvkfT8XfcDFN5j2bra56IF78/baVSdHY25mt2o3V0tMWuX6U2V5Zl8Ytf/KLp684mr3rVqyJNXbFmtphKVjLW2CTP82m/WsDdd98dl1xySXzve98rtr3xjW+Mj3/843HUUUdN9/IAAAAA1Gl2XWgEAAAAgGnVlLBoyZIlsXHjxqg9f1pGrVaLJ598MpYsWdKM5QEAAACoU1PCooULF8aKFSvipptuioiIm266KVasWFH39YoAAAAAaI6mXLMoImLdunXxwQ9+MLZu3Rpz586N1atXx6GHHtqMpQEAAACoU9PCIgAAAABmPhe4BgAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLGqChx56KC644II444wz4oILLoiHH3641S3BrLN69epYtWpVLF++PO67775WtwOzzubNm+Od73xnnHHGGfHmN785/vRP/zSeeeaZVrcFs8573vOeOOecc+K8886Liy66KH7zm9+0uiWYlT73uc/5vg4madWqVXHmmWfGueeeG+eee2785Cc/afga7obWBL//+78fb3nLW+Lcc8+NG264Ib75zW/GV7/61Va3BbPKf/7nf8bSpUvjbW97W1xzzTVxxBFHtLolmFW2bNkS9957b7zmNa+JiF0B7LPPPhtXXXVVizuD2WXbtm3R09MTERG33HJLrFmzJr797W+3uCuYXX7961/Hpz/96XjwwQd9XweTsGrVqmn/7DiyaJpt2rQp7rnnnjj77LMjIuLss8+Oe+65x29zYYKOO+64WLJkSavbgFmrt7e3CIoiIl75ylfG+vXrW9gRzE67g6KIiO3bt0eSJC3sBmafgYGBuOKKK+Jv/uZvWt0KMIZyqxvY223YsCEWL14cpVIpIiJKpVLsv//+sWHDhliwYEGLuwNgX5RlWXzta1+LVatWtboVmJUuu+yy+OlPfxp5nseXvvSlVrcDs8pnPvOZOOecc2LZsmWtbgVmtb/6q7+KPM/j1a9+dfzFX/xFzJ07t6HzO7IIAPYxV155ZXR1dcXb3/72VrcCs9JHP/rRuO222+IDH/hAXH311a1uB2aNu+66K+6+++646KKLWt0KzGrXXXdd3HjjjfHNb34z8jyPK664ouFrCIum2ZIlS2Ljxo1Rq9UiIqJWq8WTTz7pdBoAWmL16tXxyCOPxN/93d9Fmvo2AKbivPPOizvvvDM2b97c6lZgVviP//iPWLduXZx22mmxatWqeOKJJ+IP//AP4/bbb291azCr7M4TKpVKXHTRRfHzn/+84Wv4LnGaLVy4MFasWBE33XRTRETcdNNNsWLFCqegAdB0n/rUp+Luu++ONWvWRKVSaXU7MOs899xzsWHDhuL52rVrY968edHb29vCrmD2eNe73hW33357rF27NtauXRsHHHBAfPnLX46TTjqp1a3BrLFjx47Ytm1bRETkeR7//M//HCtWrGj4Ou6G1gTr1q2LD37wg7F169aYO3durF69Og499NBWtwWzykc+8pH44Q9/GE8//XTMnz8/ent743vf+16r24JZ4/7774+zzz47Dj744Ojo6IiIiGXLlsWaNWta3BnMHk8//XS85z3viZ07d0aapjFv3ry45JJL4qijjmp1azArNeOOTrC3eeyxx+J973tf1Gq1yLIsDjvssLj88stj//33b+g6wiIAAAAACk5DAwAAAKAgLAIAAACgICwCAAAAoCAsAgAAAKAgLAIAAACgICwCAJiiY489Nh577LFWtwEA0BBJnud5q5sAAJhpVq1aFU8//XSUSqXo7OyMk08+OT70oQ9Fd3d3q1sDAJhWjiwCABjFNddcE3fddVd8+9vfjrvvvju+8IUvDNlfrVZb1BkAwPQRFgEAjGPx4sXxute9Lu6///5Yvnx5XHfddXH66afH6aefHhERy5cvj0ceeSQiIvr6+uJv//Zv49RTT41Xv/rV8da3vjX6+voiIuIXv/hFXHjhhXHcccfFOeecE3feeWfLXhMAwGjKrW4AAGCm27BhQ/z4xz+ON7zhDXHbbbfFLbfcEt/4xjeio6NjWO3q1avjgQceiK9//eux3377xS9/+ctI0zQ2btwY7373u+Pqq6+O173udXHHHXfE+9///vj+978fCxYsaMGrAgAYmSOLAABG8d73vjeOO+64uOiii+L444+PP/7jP46IiHe9613R29s7LCzKsiy++c1vxmWXXRaLFy+OUqkUr3rVq6JSqcQNN9wQJ598cpxyyimRpmm89rWvjZe//OXxox/9qBUvDQBgVI4sAgAYxZo1a+LEE08ctn3JkiUj1m/evDn6+/vjwAMPHLZv/fr1cfPNN8ett95abKtWq/Ga17ymcQ0DADSAsAgAYIKSJBlx+/z586O9vT0ee+yxOPLII4fsW7JkSZx77rnxkY98pBktAgBMmtPQAAAaJE3TeMtb3hIf+9jHYuPGjVGr1eKuu+6KgYGBOOecc+LWW2+Nn/zkJ1Gr1aK/vz/uvPPOeOKJJ1rdNgDAEMIiAIAGuuSSS+KII46I888/P0444YT4xCc+EVmWxZIlS+Lzn/98fPGLX4yVK1fGKaecEl/+8pcjy7JWtwwAMESS53ne6iYAAAAAmBkcWQQAAABAQVgEAAAAQEFYBAAAAEBBWAQAAABAQVgEAAAAQEFYBAAAAEBBWAQAAABAQVgEAAAAQEFYBAAAAEDh/wf/Rfuc/PeqOQAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "aI_R9tDXsJA8"
      },
      "source": [
        "The base price of each product is given above in the summary of the outputs as well as in the graph above.\r\n",
        "---\r\n",
        "Apple 1.08\r\n",
        "\r\n",
        "Banana   0.61  \r\n",
        "\r\n",
        "Tomato   1.43  \r\n",
        "\r\n",
        "Potato   0.77 \r\n",
        "\r\n",
        "White Flour   0.72\r\n",
        "\r\n",
        "Basmati Rice     1.2 \r\n",
        "\r\n",
        "Full Cream Milk    0.46 \r\n",
        "\r\n",
        "Butter 2.99 \r\n",
        "\r\n",
        "Egg  0.15\r\n",
        "\r\n",
        "Chicken Breast   2.63\r\n",
        "\r\n",
        "This basic price has taken into account regional differences, currency differences and store variances. It encapsulates the true 'basic' price of the goods per unit sold, and the answers validate our knowledge. We know that eggs per unit are going to be the cheapest item whereas chicken breast and butter is expensive."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4O_CA5CXkQcv"
      },
      "source": [
        "# Store Multiplier Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wZryIWgeZgHu",
        "outputId": "93857025-3751-4978-eef2-852394b7aa3f"
      },
      "source": [
        "print(result.stansummary(pars=['store_multiplier']))\n"
      ],
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Inference for Stan model: anon_model_0a561886089bab8fb259074de5edee67.\n",
            "4 chains, each with iter=2000; warmup=1000; thin=1; \n",
            "post-warmup draws per chain=1000, total post-warmup draws=4000.\n",
            "\n",
            "                       mean se_mean     sd   2.5%    25%    50%    75%  97.5%  n_eff   Rhat\n",
            "store_multiplier[1]    3.45    0.03    1.8   1.03   2.17   3.08   4.37   8.01   3288    1.0\n",
            "store_multiplier[2]    2.58    0.02   1.36   0.77   1.62   2.31   3.26   6.01   3320    1.0\n",
            "store_multiplier[3]    3.19    0.01   0.54   2.21   2.81   3.16   3.54   4.36   1380    1.0\n",
            "store_multiplier[4]    4.59    0.02   0.67   3.37   4.12   4.54   5.02   5.99   1189    1.0\n",
            "store_multiplier[5]    2.94    0.01   0.52    2.0   2.57   2.92   3.27   4.04   1522    1.0\n",
            "store_multiplier[6]    9.97    0.04   1.33   7.52   9.08    9.9  10.82  12.75   1026    1.0\n",
            "store_multiplier[7]    2.86    0.03   1.53   0.83   1.77   2.54   3.61   6.69   3255    1.0\n",
            "store_multiplier[8]    3.15    0.03   1.69   0.92   1.94    2.8    4.0   7.36   3275    1.0\n",
            "store_multiplier[9]    2.81    0.02   1.22   1.02   1.92   2.61   3.47   5.84   2767    1.0\n",
            "store_multiplier[10]   4.09    0.03    1.7   1.55   2.87   3.84   5.04   7.99   2709    1.0\n",
            "store_multiplier[11]   4.87    0.02   0.72   3.57   4.38   4.83   5.32    6.4   1171    1.0\n",
            "store_multiplier[12]   3.19    0.01   0.52   2.25   2.83   3.15   3.51   4.28   1395    1.0\n",
            "store_multiplier[13]   3.02    0.02   1.29    1.1   2.08   2.82   3.73   6.05   2862    1.0\n",
            "store_multiplier[14]   2.89    0.02   1.26   1.03   1.97   2.68   3.61   5.84   2786    1.0\n",
            "store_multiplier[15]   3.89    0.02    0.6   2.81   3.47   3.84   4.28   5.19   1273    1.0\n",
            "store_multiplier[16]   2.64    0.01   0.49   1.77   2.29   2.62   2.95    3.7   1535    1.0\n",
            "store_multiplier[17]   5.25    0.02   0.76   3.84   4.74    5.2   5.72   6.87   1156    1.0\n",
            "store_multiplier[18]   3.29    0.03   1.76   0.92    2.0   2.97   4.17   7.68   2795    1.0\n",
            "store_multiplier[19]   2.75    0.01    0.5   1.85   2.39   2.71   3.07    3.8   1575    1.0\n",
            "store_multiplier[20]   2.88    0.01   0.52   1.93   2.52   2.86   3.21   3.97   1484    1.0\n",
            "store_multiplier[21]   4.07    0.02   0.62   2.94   3.64   4.04   4.47   5.37   1250    1.0\n",
            "store_multiplier[22]   5.15    0.02   0.74   3.81   4.64   5.11   5.63   6.72   1165    1.0\n",
            "store_multiplier[23]    4.3    0.02   0.67    3.1   3.84   4.27   4.73    5.7   1305    1.0\n",
            "store_multiplier[24]   4.44    0.02   0.65   3.26   3.99   4.39   4.88    5.8   1185    1.0\n",
            "store_multiplier[25]   5.51    0.02   0.79   4.07   4.95   5.46   6.01   7.11   1079    1.0\n",
            "store_multiplier[26]   2.22    0.04   1.82   0.42   1.03   1.71   2.83   6.73   2502    1.0\n",
            "store_multiplier[27]   3.26    0.03   1.41    1.2   2.22   3.02   4.07   6.66   2878    1.0\n",
            "store_multiplier[28]    3.6    0.03   1.56   1.34   2.47   3.31   4.45   7.36   3098    1.0\n",
            "store_multiplier[29]   1.94    0.02   1.08   0.45   1.16   1.74   2.47   4.65   3334    1.0\n",
            "store_multiplier[30]   3.99    0.03   1.69    1.5   2.73   3.72   4.94    8.0   2960    1.0\n",
            "store_multiplier[31]   4.48    0.02   0.68   3.26   4.03   4.46   4.91   5.93   1178    1.0\n",
            "store_multiplier[32]   3.72    0.02    0.6   2.62   3.33   3.69    4.1   4.99   1259    1.0\n",
            "store_multiplier[33]    3.2    0.01   0.54   2.22   2.83   3.16   3.55   4.36   1433    1.0\n",
            "store_multiplier[34]   3.22    0.01   0.55   2.24   2.84   3.18   3.57   4.39   1441    1.0\n",
            "store_multiplier[35]   3.45    0.02   0.57   2.41   3.05   3.42   3.82   4.66   1370    1.0\n",
            "store_multiplier[36]   4.09    0.02   0.63   2.95   3.66   4.04    4.5   5.43   1208    1.0\n",
            "store_multiplier[37]   3.44    0.01   0.55   2.46   3.05   3.42   3.78    4.6   1389    1.0\n",
            "store_multiplier[38]   4.49    0.02   0.66   3.29   4.05   4.46   4.91    5.9   1141    1.0\n",
            "store_multiplier[39]    3.1    0.01   0.53   2.14   2.73   3.07   3.44   4.23   1456    1.0\n",
            "store_multiplier[40]   3.65    0.02   0.58    2.6   3.25   3.63   4.02   4.89   1391    1.0\n",
            "store_multiplier[41]    3.8    0.02   0.79   2.36   3.25   3.76   4.32   5.42   1886    1.0\n",
            "store_multiplier[42]   3.39    0.02   0.77   2.02   2.84   3.37   3.86   5.03   1796    1.0\n",
            "store_multiplier[43]   3.04    0.03   1.44    1.0   1.99    2.8   3.83   6.44   2873    1.0\n",
            "store_multiplier[44]    3.0    0.01   0.69   1.77   2.52   2.96   3.44   4.44   2109    1.0\n",
            "store_multiplier[45]   3.38    0.02   0.74   2.08   2.85   3.33   3.86   4.92   2297    1.0\n",
            "store_multiplier[46]   3.43    0.03    1.6   1.17   2.26   3.15    4.3   7.24   2670    1.0\n",
            "store_multiplier[47]   2.56    0.03   1.58    0.6   1.44   2.19   3.26   6.63   3520    1.0\n",
            "store_multiplier[48]   2.52    0.03   1.52   0.57   1.42   2.18   3.28   6.34   3457    1.0\n",
            "store_multiplier[49]   2.28    0.01   0.46   1.47   1.96   2.26   2.57   3.26   1887    1.0\n",
            "store_multiplier[50]   3.23    0.01   0.55   2.24   2.84    3.2   3.58   4.45   1467    1.0\n",
            "store_multiplier[51]   2.82    0.03   1.33   0.95   1.85   2.58   3.56   5.91   2770    1.0\n",
            "store_multiplier[52]   3.14    0.04   1.96   0.84   1.74   2.67   3.99   8.22   2875    1.0\n",
            "store_multiplier[53]   2.48    0.03   1.33   0.71    1.5   2.21   3.15   5.74   2702    1.0\n",
            "\n",
            "Samples were drawn using NUTS at Fri Mar 12 22:39:04 2021.\n",
            "For each parameter, n_eff is a crude measure of effective sample size,\n",
            "and Rhat is the potential scale reduction factor on split chains (at \n",
            "convergence, Rhat=1).\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HoQVERoHb6xb",
        "outputId": "538039ed-9161-4cd4-f83e-30ce80f782b7"
      },
      "source": [
        "store_dict\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'1316 US-89, Farmington, UT 84025': 19,\n",
              " '200 Station Pkwy, Farmington, UT 84025': 17,\n",
              " 'ATB - https://zakaz.atbmarket.com/': 13,\n",
              " 'ATB, vyl. Instytutska 4, Shostka, Ukraine': 9,\n",
              " 'Amazon Fresh (link: https://www.amazon.com/alm/storefront?almBrandId=QW1hem9uIEZyZXNo )': 20,\n",
              " 'Bi-Rite Market (https://www.instacart.com/store/bi-rite-market/storefront)': 25,\n",
              " 'Bush Market 820 - Bush St, San Francisco, CA 94108': 31,\n",
              " 'COST CO (link: https://www.instacart.com/store/costco/)': 21,\n",
              " 'City Discount Meat and Grocery @ 2298 Mission St, San Francisco, CA 94110': 42,\n",
              " 'Coop Kärrtorp - Lågskärsvägen 15': 8,\n",
              " 'Dong Hing Supermarket, 1210 Stockton St, San Francisco, CA 94133': 46,\n",
              " 'El Chico Produce Market 4. 2965 24th St, San Francisco': 45,\n",
              " 'FoodsCo 1800 Folsom St, San Francisco, California 94103': 50,\n",
              " 'Foodsco (foodsco.net)': 5,\n",
              " 'Grocery Outlet, 1245 S Van Ness Ave, San Francisco, CA 94110': 49,\n",
              " 'Grocery Outlet. 1245 S Van Ness Ave, San Francisco': 44,\n",
              " 'Hop Hing Market, 1211 Stockton St, San Francisco, CA 94133': 43,\n",
              " 'ICA Kvantum BEA Livsmedel - Handelsvägen 188': 7,\n",
              " 'J&W Market, 723 Pine St, San Francisco, CA 94108': 37,\n",
              " \"Luke's Local (https://lukeslocal.com/) \": 52,\n",
              " 'Mercado Sao Mateus. R. Antônio Felíciano de Almeida, 100 - Centro, Cabo Frio - RJ, 28907-013': 29,\n",
              " 'Mission Duc Loi Supermarket @ 2200 Mission St, San Francisco, CA 94110': 41,\n",
              " 'Navias': 26,\n",
              " 'Princesas 1 Av. Teixeira e Souza, 1025 - Centro, Cabo Frio - RJ, 28907-410': 30,\n",
              " 'Princesas Supermercados 3. Av. Teixeira e Souza, 301 - Centro, Cabo Frio - RJ, 28907-410': 27,\n",
              " 'Rainbow Grocery: https://www.instacart.com/store/rainbow-grocery/storefront': 23,\n",
              " 'Rajshahi New Market, Boalia, Rajshahi 6100, Bangladesh': 47,\n",
              " 'Rajshahi Shalbagan Bazar, Boalia, Rajahshi 6203, Bangladesh': 48,\n",
              " 'Safeway, 15 Marina Blvd, San Francisco, CA 94123': 22,\n",
              " 'Safeway, 2020 market street': 18,\n",
              " 'Safeway, 350 Bay St, San Francisco, CA 94133': 38,\n",
              " 'Safeway, 94111 ': 53,\n",
              " 'Safeway: https://www.safeway.com/': 15,\n",
              " 'Save On Foods - Foul Bay (https://www.saveonfoods.com/sm/planning/rsid/921) ': 2,\n",
              " 'Silpo, vul Kharkivska 2, Sumy, Ukraine': 10,\n",
              " 'Sprouts Farmers Market (https://www.instacart.com/store/sprouts/storefront)': 24,\n",
              " 'Supermercado econômico Av. Teixeira e Souza - Centro, Cabo Frio - RJ, 28905-090': 28,\n",
              " 'Target - 225 Bush St Ste 100, San Francisco, CA 94104': 32,\n",
              " 'Target @789 Mission St, San Francisco, CA 94103, URL: https://www.target.com/': 11,\n",
              " 'Target, 2675 Geary Blvd, San Francisco, CA 94118': 40,\n",
              " 'Target; 225 Bush St Ste 100, San Francisco, CA 94104\\t': 3,\n",
              " 'The Epicurean Trader (instacart.com/store/the-epicurean-trader)': 6,\n",
              " \"Thrifty's (https://www.thriftyfoods.com)\": 1,\n",
              " 'Tom Thumb, 14999 Preston Rd, Dallas, TX 75254': 34,\n",
              " \"Trader Joe's, 1095 Hyde Street, San Francisco, CA\": 33,\n",
              " \"Trader Joe's, 401 Bay St, San Francisco, CA 94133\": 39,\n",
              " 'Varus - https://go.varus.ua/': 14,\n",
              " 'Walmart @San Leandro, Store #2648 1919 Davis St, CA 94577 https://www.walmart.com/grocery/?veh=wmt': 12,\n",
              " 'Walmart Supercenter, 15220 Montfort Rd, Dallas, TX 75248': 35,\n",
              " 'Walmart: https://www.instacart.com/store/walmart/storefront': 16,\n",
              " 'Wholefoods; 399 4th St San Francisco, CA 94107': 4,\n",
              " 'https://www.luckysupermarkets.com/': 36,\n",
              " 'https://www.walmart.com/': 51}"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 595
        },
        "id": "kXakOYF8b-Wv",
        "outputId": "b9b020aa-209c-4118-9fb0-ed6ac6c5db85"
      },
      "source": [
        "store_list={}\n",
        "for i in range(len(store)):\n",
        "    store_list[i+1] = store[i]\n",
        "plt.figure(figsize=(20,10))\n",
        "for i in range(len(store_dict)):\n",
        "    plt.hist(samples['store_multiplier'][:, i], label = store_list[i+1], density = True, alpha=0.8)\n",
        "plt.xlabel(\"Store multiplier\")\n",
        "plt.ylabel(\"Density\")\n",
        "plt.title(\"Store multiplier distributions\")\n",
        "plt.show()"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 647
        },
        "id": "AVc7JLNUcB4w",
        "outputId": "d47f6d19-8f54-476a-a918-746aa247a521"
      },
      "source": [
        "#Let's consider only the 5 most expensive stores\n",
        "expensive_stores = []\n",
        "for i in range(len(store_dict)):\n",
        "    expensive_stores.append(np.mean(samples['store_multiplier'][:, i]))\n",
        "expensive_stores_sorted = sorted(expensive_stores)\n",
        "\n",
        "top_5=[]\n",
        "top_5 = expensive_stores_sorted[len(expensive_stores_sorted)-5:]\n",
        "\n",
        "index_high=[]\n",
        "\n",
        "for i in top_5:\n",
        "    index_high.append(expensive_stores.index(i))\n",
        "plt.figure(figsize=(20,10))\n",
        "\n",
        "for i in index_high:\n",
        "    plt.hist(samples['store_multiplier'][:, i], label = store_list[i+1], density = True, alpha=0.8)\n",
        "plt.legend()\n",
        "plt.xlabel(\"Store multiplier\")\n",
        "plt.ylabel(\"Density\")\n",
        "plt.title(\"Store multiplier distributions of expensive stores\")\n",
        "plt.show()"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 595
        },
        "id": "xJ4OMAU_o87h",
        "outputId": "8da44aa9-d20a-46d5-8d9e-2ad3bc354524"
      },
      "source": [
        "## Now we can look at the cheapest stores\r\n",
        "\r\n",
        "cheap_stores = []\r\n",
        "for i in range(len(store_dict)):\r\n",
        "    cheap_stores.append(np.mean(samples['store_multiplier'][:, i]))\r\n",
        "cheap_stores_sorted = sorted(cheap_stores)\r\n",
        "\r\n",
        "bot_5=[]\r\n",
        "bot_5 = cheap_stores_sorted[:5]\r\n",
        "\r\n",
        "index_low=[]\r\n",
        "\r\n",
        "for i in bot_5:\r\n",
        "    index_low.append(cheap_stores.index(i))\r\n",
        "plt.figure(figsize=(20,10))\r\n",
        "\r\n",
        "for i in index_low:\r\n",
        "    plt.hist(samples['store_multiplier'][:, i], label = store_list[i+1], density = True, alpha=0.8)\r\n",
        "plt.legend()\r\n",
        "plt.xlabel(\"Store multiplier\")\r\n",
        "plt.ylabel(\"Density\")\r\n",
        "plt.title(\"Store multiplier distributions of cheapest stores\")\r\n",
        "plt.show()\r\n"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z-ei4vo0uCRQ"
      },
      "source": [
        "The store multiplier is a peculiar one. Since there are over 50 rows, I decided to individually check which store's were more expensive and which ones were cheaper. The results are very consistent except for some outliers. We cannot go store-by-store in the analysis, but I decided to take the 5 most expensive and 5 cheapest stores to check what the trends were. The 5 most expensive stores are all located in the US and all have a repute for being more luxury. Especially the 'Epicurean Trader' is considered to be a high-end store, so our results are validated. On the other end, we have most stores that aren't from the US. The Grocery Outlet is an outlier here and may have popped up due to insufficient data. But overall this is what we would expect to see, and the magnitudes of the x-axis clearly illustrate how the more reputable the store is, the higher the multipliers. \r\n",
        "\r\n",
        "Note: I opted to look at stores individually instead of grouping them together according to budget/mid-range etc since looking at the inputs to the dataset, there was a lot of variance and no exact definition of consistency with this selection. Some stores I considered budget were marked down as mid-range and even luxury, and the opposite occurred too. Therefore, I wished to analyze stores at the individual level instead."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ECKwjvlwkQcx"
      },
      "source": [
        "# Country Multiplier Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 592
        },
        "id": "9y82FjQ1cIGd",
        "outputId": "7f486623-18bb-498e-86d4-ba741480a172"
      },
      "source": [
        "country_list={}\n",
        "for i in range(len(country)):\n",
        "    country_list[i+1] = country[i]\n",
        "plt.figure(figsize=(20,10))\n",
        "for i in range(len(country_dict)):\n",
        "    plt.hist(samples['country_multiplier'][:, i], label = country_list[i+1], density = True, alpha=0.8)\n",
        "plt.legend()\n",
        "plt.xlabel(\"Country multiplier\")\n",
        "plt.ylabel(\"Density\")\n",
        "plt.title(\"Country multiplier distributions\")\n",
        "plt.show()"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mhtJavhRvekI"
      },
      "source": [
        "The country multipliers are consistent with what we would expect as well. Over here, most of the high weighted multipliers are for the US, (though there are multiple names for this). On the opposite end, countries like Brazil and Bangladesh have smaller multiples, showing that their impact on the prices is minimal. This showcases that for richer countries, the effect on groceries is higher than for developing countries, and then it further consolidates how there's variance even within a rich country about the type of store which can magnify the effects of this multiplier even further. So an Epicurean Trader in the US will surely have a higher price for the same good as found in Rajshahi Shalbagan Bazaar in Bangladesh."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-_jnE-z0kQcx"
      },
      "source": [
        "# Rent Price Vs Store Multiplier Analysis"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VWDO2LUTFVAn"
      },
      "source": [
        "#Create a dictionary with name of store with corresponding rental price\n",
        "store_rent_dict=[]\n",
        "\n",
        "store_rent_dict\n",
        "\n",
        "rental =dta['Rent per m^2'].str.replace('$','')\n",
        "rental1 = np.array(rental).astype(np.float)\n",
        "\n",
        "for i in range(len(rental1)):\n",
        "    store_rent_dict.append(rental1[i]* dta['Exchange rate'][i])\n"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uJjRnGVvFbow"
      },
      "source": [
        "#Get the list of store multipliers from above\n",
        "store_multiplier_1 = []\n",
        "for i in range(0, len(store_rent_dict)): \n",
        "    store_multiplier_1.append(np.mean(samples['store_multiplier'][:, i]))\n"
      ],
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 301
        },
        "id": "BpQBnDFkFvVI",
        "outputId": "d6bd97eb-ea5d-413c-ecb9-84925acb3865"
      },
      "source": [
        "plt.figure()\n",
        "multiplier = store_multiplier_1\n",
        "plt.scatter(store_rent_dict, multiplier)\n",
        "\n",
        "#Creating the line of best fit\n",
        "result_regression = sts.linregress(store_rent_dict, multiplier)\n",
        "slope = result_regression[0]\n",
        "intercept = result_regression[1]\n",
        "x = np.linspace(0, 70, 350)\n",
        "plt.plot(x, intercept + slope*x)\n",
        "\n",
        "plt.title('Correlation between rent price and store multiplier')\n",
        "plt.xlabel('Rent price in USD')\n",
        "plt.ylabel('Store multiplier')\n",
        "plt.show()"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gNfJSooLwTEO"
      },
      "source": [
        "This was the last comparison I wished to make. Even though the rental prices in themselves could have been used here, I wished to level the field by first equating all prices to USD, and then converting them to price per Meter square. This was done since a 1200 dollar apartment being compared to a $4000 apartment which is twice the size has other confounding factors such as size, furnishing, amenities instead of just the perception of the neighborhood. So to minimize the effect of outside bias, I singled out this by dividing the apartments with either the size given, or reasonable estimates based on location.\r\n",
        "\r\n",
        "The regression analysis was done to showcase the effect of whether rental prices had any direct correlation with store multipliers. The hypothesis implies that expensive neighborhoods will have more expensive stores that sell the same goods for higher prices. As the scatterplot shows, this hypothesis has some ground to it. The positive gradient showcases that when rent is higher (again, suggesting a more luxurious and affluent neighborhood), the store multipliers are higher as well. We have to still be wary of other biases such as expensive stores keeping more expensive brands, but choices like these alone display that there is a distinct and measurable effect of buying the same products at different locations."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vCA6z5TyFw7W"
      },
      "source": [
        ""
      ],
      "execution_count": 41,
      "outputs": []
    }
  ]
}
